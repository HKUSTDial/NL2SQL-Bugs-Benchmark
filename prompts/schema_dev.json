{
    "codebase_community": {
      "db_id": "codebase_community",
      "tables": {
        "badges": {
          "name": "badges",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "UserId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Date",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "UserId",
              "to_table": "users",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key,\n    UserId INTEGER          null,\n    Name   TEXT null,\n    Date   DATETIME     null,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key -- the badge id,\n    UserId INTEGER          null -- the unique id of the user,\n    Name   TEXT null -- the badge name the user obtained,\n    Date   DATETIME     null -- the date that the user obtained the badge,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
        },
        "comments": {
          "name": "comments",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "PostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Score",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Text",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "CreationDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "UserId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "UserDisplayName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "UserId",
              "to_table": "users",
              "to_column": "Id"
            },
            {
              "from": "PostId",
              "to_table": "posts",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key,\n    PostId          INTEGER          null,\n    Score           INTEGER          null,\n    Text            TEXT     null,\n    CreationDate    DATETIME     null,\n    UserId          INTEGER          null,\n    UserDisplayName TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key -- the comment Id,\n    PostId          INTEGER          null -- the unique id of the post,\n    Score           INTEGER          null -- rating score,\n    Text            TEXT     null -- the detailed content of the comment,\n    CreationDate    DATETIME     null -- the creation date of the comment,\n    UserId          INTEGER          null -- the id of the user who post the comment,\n    UserDisplayName TEXT null -- user''s display name,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
        },
        "postHistory": {
          "name": "postHistory",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "PostHistoryTypeId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "PostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "RevisionGUID",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "CreationDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "UserId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Text",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Comment",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "UserDisplayName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "UserId",
              "to_table": "users",
              "to_column": "Id"
            },
            {
              "from": "PostId",
              "to_table": "posts",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key,\n    PostHistoryTypeId INTEGER          null,\n    PostId            INTEGER          null,\n    RevisionGUID      TEXT null,\n    CreationDate      DATETIME     null,\n    UserId            INTEGER          null,\n    Text              TEXT     null,\n    Comment           TEXT         null,\n    UserDisplayName   TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key -- the post history id,\n    PostHistoryTypeId INTEGER          null -- the id of the post history type,\n    PostId            INTEGER          null -- the unique id of the post,\n    RevisionGUID      TEXT null -- the revision globally unique id of the post,\n    CreationDate      DATETIME     null -- the creation date of the post,\n    UserId            INTEGER          null -- the user who post the post,\n    Text              TEXT     null -- the detailed content of the post,\n    Comment           TEXT         null -- comments of the post,\n    UserDisplayName   TEXT null -- user''s display name,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
        },
        "postLinks": {
          "name": "postLinks",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "CreationDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "PostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "RelatedPostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "LinkTypeId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "RelatedPostId",
              "to_table": "posts",
              "to_column": "Id"
            },
            {
              "from": "PostId",
              "to_table": "posts",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key,\n    CreationDate  DATETIME null,\n    PostId        INTEGER      null,\n    RelatedPostId INTEGER      null,\n    LinkTypeId    INTEGER      null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key -- the post link id,\n    CreationDate  DATETIME null -- the creation date of the post link,\n    PostId        INTEGER      null -- the post id,\n    RelatedPostId INTEGER      null -- the id of the related post,\n    LinkTypeId    INTEGER      null -- the id of the link type,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)"
        },
        "posts": {
          "name": "posts",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "PostTypeId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "AcceptedAnswerId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CreaionDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "Score",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ViewCount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Body",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "OwnerUserId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "LasActivityDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "Title",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Tags",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AnswerCount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CommentCount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "FavoriteCount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "LastEditorUserId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "LastEditDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "CommunityOwnedDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "ParentId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ClosedDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "OwnerDisplayName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "LastEditorDisplayName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "ParentId",
              "to_table": "posts",
              "to_column": "Id"
            },
            {
              "from": "OwnerUserId",
              "to_table": "users",
              "to_column": "Id"
            },
            {
              "from": "LastEditorUserId",
              "to_table": "users",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key,\n    PostTypeId            INTEGER          null,\n    AcceptedAnswerId      INTEGER          null,\n    CreaionDate           DATETIME     null,\n    Score                 INTEGER          null,\n    ViewCount             INTEGER          null,\n    Body                  TEXT     null,\n    OwnerUserId           INTEGER          null,\n    LasActivityDate       DATETIME     null,\n    Title                 TEXT null,\n    Tags                  TEXT null,\n    AnswerCount           INTEGER          null,\n    CommentCount          INTEGER          null,\n    FavoriteCount         INTEGER          null,\n    LastEditorUserId      INTEGER          null,\n    LastEditDate          DATETIME     null,\n    CommunityOwnedDate    DATETIME    null,\n    ParentId              INTEGER          null,\n    ClosedDate            DATETIME     null,\n    OwnerDisplayName      TEXT null,\n    LastEditorDisplayName TEXT null,\n        foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key -- the post id,\n    PostTypeId            INTEGER          null -- the id of the post type,\n    AcceptedAnswerId      INTEGER          null -- the accepted answer id of the post ,\n    CreaionDate           DATETIME     null -- the creation date of the post,\n    Score                 INTEGER          null -- the score of the post,\n    ViewCount             INTEGER          null -- the view count of the post,\n    Body                  TEXT     null -- the body of the post,\n    OwnerUserId           INTEGER          null -- the id of the owner user,\n    LasActivityDate       DATETIME     null -- the last activity date,\n    Title                 TEXT null -- the title of the post,\n    Tags                  TEXT null -- the tag of the post,\n    AnswerCount           INTEGER          null -- the total number of answers of the post,\n    CommentCount          INTEGER          null -- the total number of comments of the post,\n    FavoriteCount         INTEGER          null -- the total number of favorites of the post,\n    LastEditorUserId      INTEGER          null -- the id of the last editor,\n    LastEditDate          DATETIME     null -- the last edit date,\n    CommunityOwnedDate    DATETIME    null -- the community owned date,\n    ParentId              INTEGER          null -- the id of the parent post,\n    ClosedDate            DATETIME     null -- the closed date of the post,\n    OwnerDisplayName      TEXT null -- the display name of the post owner,\n    LastEditorDisplayName TEXT null -- the display name of the last editor,\n    foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n    foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n    foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)"
        },
        "tags": {
          "name": "tags",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "TagName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Count",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ExcerptPostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "WikiPostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "ExcerptPostId",
              "to_table": "posts",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key,\n    TagName       TEXT null,\n    Count         INTEGER          null,\n    ExcerptPostId INTEGER          null,\n    WikiPostId    INTEGER          null,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key -- the tag id,\n    TagName       TEXT null -- the name of the tag,\n    Count         INTEGER          null -- the count of posts that contain this tag,\n    ExcerptPostId INTEGER          null -- the excerpt post id of the tag,\n    WikiPostId    INTEGER          null -- the wiki post id of the tag,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)"
        },
        "users": {
          "name": "users",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "Reputation",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CreationDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "DisplayName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "LastAccessDate",
              "type": "DATETIME",
              "notnull": false,
              "default": null
            },
            {
              "name": "WebsiteUrl",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Location",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AboutMe",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Views",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "UpVotes",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "DownVotes",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "AccountId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Age",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ProfileImageUrl",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key,\n    Reputation      INTEGER          null,\n    CreationDate    DATETIME     null,\n    DisplayName     TEXT null,\n    LastAccessDate  DATETIME     null,\n    WebsiteUrl      TEXT null,\n    Location        TEXT null,\n    AboutMe         TEXT     null,\n    Views           INTEGER          null,\n    UpVotes         INTEGER          null,\n    DownVotes       INTEGER          null,\n    AccountId       INTEGER          null,\n    Age             INTEGER          null,\n    ProfileImageUrl TEXT null\n)",
          "enhanced_ddl": "CREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key -- the user id,\n    Reputation      INTEGER          null -- the user''s reputation,\n    CreationDate    DATETIME     null -- the creation date of the user account,\n    DisplayName     TEXT null -- the user''s display name,\n    LastAccessDate  DATETIME     null -- the last access date of the user account,\n    WebsiteUrl      TEXT null -- the website url of the user account,\n    Location        TEXT null -- user''s location,\n    AboutMe         TEXT     null -- the self introduction of the user,\n    Views           INTEGER          null -- the number of views ,\n    UpVotes         INTEGER          null -- the number of upvotes,\n    DownVotes       INTEGER          null -- the number of downvotes,\n    AccountId       INTEGER          null -- the unique id of the account,\n    Age             INTEGER          null -- user''s age,\n    ProfileImageUrl TEXT null -- the profile image url\n)"
        },
        "votes": {
          "name": "votes",
          "columns": [
            {
              "name": "Id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "PostId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "VoteTypeId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CreationDate",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "UserId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "BountyAmount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "Id"
          ],
          "foreign_keys": [
            {
              "from": "UserId",
              "to_table": "users",
              "to_column": "Id"
            },
            {
              "from": "PostId",
              "to_table": "posts",
              "to_column": "Id"
            }
          ],
          "ddl": "CREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key,\n    PostId       INTEGER  null,\n    VoteTypeId   INTEGER  null,\n    CreationDate DATE null,\n    UserId       INTEGER  null,\n    BountyAmount INTEGER  null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key -- the vote id,\n    PostId       INTEGER  null -- the id of the post that is voted,\n    VoteTypeId   INTEGER  null -- the id of the vote type,\n    CreationDate DATE null -- the creation date of the vote,\n    UserId       INTEGER  null -- the id of the voter,\n    BountyAmount INTEGER  null -- the amount of bounty,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
        }
      },
      "ddl": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key,\n    UserId INTEGER          null,\n    Name   TEXT null,\n    Date   DATETIME     null,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key,\n    PostId          INTEGER          null,\n    Score           INTEGER          null,\n    Text            TEXT     null,\n    CreationDate    DATETIME     null,\n    UserId          INTEGER          null,\n    UserDisplayName TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key,\n    PostHistoryTypeId INTEGER          null,\n    PostId            INTEGER          null,\n    RevisionGUID      TEXT null,\n    CreationDate      DATETIME     null,\n    UserId            INTEGER          null,\n    Text              TEXT     null,\n    Comment           TEXT         null,\n    UserDisplayName   TEXT null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key,\n    CreationDate  DATETIME null,\n    PostId        INTEGER      null,\n    RelatedPostId INTEGER      null,\n    LinkTypeId    INTEGER      null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key,\n    PostTypeId            INTEGER          null,\n    AcceptedAnswerId      INTEGER          null,\n    CreaionDate           DATETIME     null,\n    Score                 INTEGER          null,\n    ViewCount             INTEGER          null,\n    Body                  TEXT     null,\n    OwnerUserId           INTEGER          null,\n    LasActivityDate       DATETIME     null,\n    Title                 TEXT null,\n    Tags                  TEXT null,\n    AnswerCount           INTEGER          null,\n    CommentCount          INTEGER          null,\n    FavoriteCount         INTEGER          null,\n    LastEditorUserId      INTEGER          null,\n    LastEditDate          DATETIME     null,\n    CommunityOwnedDate    DATETIME    null,\n    ParentId              INTEGER          null,\n    ClosedDate            DATETIME     null,\n    OwnerDisplayName      TEXT null,\n    LastEditorDisplayName TEXT null,\n        foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n        foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key,\n    TagName       TEXT null,\n    Count         INTEGER          null,\n    ExcerptPostId INTEGER          null,\n    WikiPostId    INTEGER          null,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)\n\nCREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key,\n    Reputation      INTEGER          null,\n    CreationDate    DATETIME     null,\n    DisplayName     TEXT null,\n    LastAccessDate  DATETIME     null,\n    WebsiteUrl      TEXT null,\n    Location        TEXT null,\n    AboutMe         TEXT     null,\n    Views           INTEGER          null,\n    UpVotes         INTEGER          null,\n    DownVotes       INTEGER          null,\n    AccountId       INTEGER          null,\n    Age             INTEGER          null,\n    ProfileImageUrl TEXT null\n)\n\nCREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key,\n    PostId       INTEGER  null,\n    VoteTypeId   INTEGER  null,\n    CreationDate DATE null,\n    UserId       INTEGER  null,\n    BountyAmount INTEGER  null,\n        foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n        foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)",
      "enhanced_ddl": "CREATE TABLE badges\n(\n    Id     INTEGER          not null\n        primary key -- the badge id,\n    UserId INTEGER          null -- the unique id of the user,\n    Name   TEXT null -- the badge name the user obtained,\n    Date   DATETIME     null -- the date that the user obtained the badge,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE comments\n(\n    Id              INTEGER          not null\n        primary key -- the comment Id,\n    PostId          INTEGER          null -- the unique id of the post,\n    Score           INTEGER          null -- rating score,\n    Text            TEXT     null -- the detailed content of the comment,\n    CreationDate    DATETIME     null -- the creation date of the comment,\n    UserId          INTEGER          null -- the id of the user who post the comment,\n    UserDisplayName TEXT null -- user''s display name,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE postHistory\n(\n    Id                INTEGER          not null UNIQUE\n        primary key -- the post history id,\n    PostHistoryTypeId INTEGER          null -- the id of the post history type,\n    PostId            INTEGER          null -- the unique id of the post,\n    RevisionGUID      TEXT null -- the revision globally unique id of the post,\n    CreationDate      DATETIME     null -- the creation date of the post,\n    UserId            INTEGER          null -- the user who post the post,\n    Text              TEXT     null -- the detailed content of the post,\n    Comment           TEXT         null -- comments of the post,\n    UserDisplayName   TEXT null -- user''s display name,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE postLinks\n(\n    Id            INTEGER      not null\n        primary key -- the post link id,\n    CreationDate  DATETIME null -- the creation date of the post link,\n    PostId        INTEGER      null -- the post id,\n    RelatedPostId INTEGER      null -- the id of the related post,\n    LinkTypeId    INTEGER      null -- the id of the link type,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (RelatedPostId) references posts (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE posts\n(\n    Id                    INTEGER          not null UNIQUE\n        primary key -- the post id,\n    PostTypeId            INTEGER          null -- the id of the post type,\n    AcceptedAnswerId      INTEGER          null -- the accepted answer id of the post ,\n    CreaionDate           DATETIME     null -- the creation date of the post,\n    Score                 INTEGER          null -- the score of the post,\n    ViewCount             INTEGER          null -- the view count of the post,\n    Body                  TEXT     null -- the body of the post,\n    OwnerUserId           INTEGER          null -- the id of the owner user,\n    LasActivityDate       DATETIME     null -- the last activity date,\n    Title                 TEXT null -- the title of the post,\n    Tags                  TEXT null -- the tag of the post,\n    AnswerCount           INTEGER          null -- the total number of answers of the post,\n    CommentCount          INTEGER          null -- the total number of comments of the post,\n    FavoriteCount         INTEGER          null -- the total number of favorites of the post,\n    LastEditorUserId      INTEGER          null -- the id of the last editor,\n    LastEditDate          DATETIME     null -- the last edit date,\n    CommunityOwnedDate    DATETIME    null -- the community owned date,\n    ParentId              INTEGER          null -- the id of the parent post,\n    ClosedDate            DATETIME     null -- the closed date of the post,\n    OwnerDisplayName      TEXT null -- the display name of the post owner,\n    LastEditorDisplayName TEXT null -- the display name of the last editor,\n    foreign key (LastEditorUserId) references users (Id)\n            on update cascade on delete cascade,\n    foreign key (OwnerUserId) references users (Id)\n            on update cascade on delete cascade,\n    foreign key (ParentId) references posts (Id)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE tags\n(\n    Id            INTEGER          not null\n        primary key -- the tag id,\n    TagName       TEXT null -- the name of the tag,\n    Count         INTEGER          null -- the count of posts that contain this tag,\n    ExcerptPostId INTEGER          null -- the excerpt post id of the tag,\n    WikiPostId    INTEGER          null -- the wiki post id of the tag,\n    foreign key (ExcerptPostId) references posts (Id)\n        on update cascade on delete cascade\n)\n\nCREATE TABLE users\n(\n    Id              INTEGER          not null UNIQUE\n        primary key -- the user id,\n    Reputation      INTEGER          null -- the user''s reputation,\n    CreationDate    DATETIME     null -- the creation date of the user account,\n    DisplayName     TEXT null -- the user''s display name,\n    LastAccessDate  DATETIME     null -- the last access date of the user account,\n    WebsiteUrl      TEXT null -- the website url of the user account,\n    Location        TEXT null -- user''s location,\n    AboutMe         TEXT     null -- the self introduction of the user,\n    Views           INTEGER          null -- the number of views ,\n    UpVotes         INTEGER          null -- the number of upvotes,\n    DownVotes       INTEGER          null -- the number of downvotes,\n    AccountId       INTEGER          null -- the unique id of the account,\n    Age             INTEGER          null -- user''s age,\n    ProfileImageUrl TEXT null -- the profile image url\n)\n\nCREATE TABLE votes\n(\n    Id           INTEGER  not null\n        primary key -- the vote id,\n    PostId       INTEGER  null -- the id of the post that is voted,\n    VoteTypeId   INTEGER  null -- the id of the vote type,\n    CreationDate DATE null -- the creation date of the vote,\n    UserId       INTEGER  null -- the id of the voter,\n    BountyAmount INTEGER  null -- the amount of bounty,\n    foreign key (PostId) references posts (Id)\n            on update cascade on delete cascade,\n    foreign key (UserId) references users (Id)\n            on update cascade on delete cascade\n)"
    },
    "superhero": {
      "db_id": "superhero",
      "tables": {
        "alignment": {
          "name": "alignment",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "alignment",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key -- the unique identifier of the alignment,\n    alignment TEXT default NULL -- the alignment of the superhero\n)"
        },
        "attribute": {
          "name": "attribute",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "attribute_name",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key -- the unique identifier of the attribute,\n    attribute_name TEXT default NULL -- the attribute\n)"
        },
        "colour": {
          "name": "colour",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "colour",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key -- the unique identifier of the color,\n    colour TEXT default NULL -- the color of the superhero''s skin/eye/hair/etc\n)"
        },
        "gender": {
          "name": "gender",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "gender",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key -- the unique identifier of the gender,\n    gender TEXT default NULL -- the gender of the superhero\n)"
        },
        "publisher": {
          "name": "publisher",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "publisher_name",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key -- the unique identifier of the publisher,\n    publisher_name TEXT default NULL -- the name of the publisher\n)"
        },
        "race": {
          "name": "race",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "race",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE race\n(\n    id   INTEGER not null\n            primary key -- the unique identifier of the race,\n    race TEXT default NULL -- the race of the superhero\n)"
        },
        "superhero": {
          "name": "superhero",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "superhero_name",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "full_name",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "gender_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "eye_colour_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "hair_colour_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "skin_colour_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "race_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "publisher_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "alignment_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "height_cm",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "weight_kg",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "skin_colour_id",
              "to_table": "colour",
              "to_column": "id"
            },
            {
              "from": "race_id",
              "to_table": "race",
              "to_column": "id"
            },
            {
              "from": "publisher_id",
              "to_table": "publisher",
              "to_column": "id"
            },
            {
              "from": "hair_colour_id",
              "to_table": "colour",
              "to_column": "id"
            },
            {
              "from": "gender_id",
              "to_table": "gender",
              "to_column": "id"
            },
            {
              "from": "eye_colour_id",
              "to_table": "colour",
              "to_column": "id"
            },
            {
              "from": "alignment_id",
              "to_table": "alignment",
              "to_column": "id"
            }
          ],
          "ddl": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)",
          "enhanced_ddl": "CREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key -- the unique identifier of the superhero,\n    superhero_name TEXT default NULL -- the name of the superhero,\n    full_name      TEXT default NULL -- the full name of the superhero,\n    gender_id      INTEGER          default NULL -- the id of the superhero''s gender,\n    eye_colour_id  INTEGER          default NULL -- the id of the superhero''s eye color,\n    hair_colour_id INTEGER          default NULL -- the id of the superhero''s hair color,\n    skin_colour_id INTEGER          default NULL -- the id of the superhero''s skin color,\n    race_id        INTEGER          default NULL -- the id of the superhero''s race,\n    publisher_id   INTEGER          default NULL -- the id of the publisher,\n    alignment_id   INTEGER          default NULL -- the id of the superhero''s alignment,\n    height_cm      INTEGER          default NULL -- the height of the superhero,\n    weight_kg      INTEGER          default NULL -- the weight of the superhero,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)"
        },
        "hero_attribute": {
          "name": "hero_attribute",
          "columns": [
            {
              "name": "hero_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "attribute_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "attribute_value",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [],
          "foreign_keys": [
            {
              "from": "hero_id",
              "to_table": "superhero",
              "to_column": "id"
            },
            {
              "from": "attribute_id",
              "to_table": "attribute",
              "to_column": "id"
            }
          ],
          "ddl": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)",
          "enhanced_ddl": "CREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL -- the id of the hero\nMaps to superhero(id),\n    attribute_id    INTEGER default NULL -- the id of the attribute\nMaps to attribute(id),\n    attribute_value INTEGER default NULL -- the attribute value,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)"
        },
        "superpower": {
          "name": "superpower",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "power_name",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)",
          "enhanced_ddl": "CREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key -- the unique identifier of the superpower,\n    power_name TEXT default NULL -- the superpower name\n)"
        },
        "hero_power": {
          "name": "hero_power",
          "columns": [
            {
              "name": "hero_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "power_id",
              "type": "INTEGER",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [],
          "foreign_keys": [
            {
              "from": "power_id",
              "to_table": "superpower",
              "to_column": "id"
            },
            {
              "from": "hero_id",
              "to_table": "superhero",
              "to_column": "id"
            }
          ],
          "ddl": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)",
          "enhanced_ddl": "CREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL -- the id of the hero\nMaps to superhero(id),\n    power_id INTEGER default NULL -- the id of the power\nMaps to superpower(id),\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
        }
      },
      "ddl": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key,\n    alignment TEXT default NULL\n)\n\nCREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key,\n    attribute_name TEXT default NULL\n)\n\nCREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key,\n    colour TEXT default NULL\n)\n\nCREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key,\n    gender TEXT default NULL\n)\n\nCREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key,\n    publisher_name TEXT default NULL\n)\n\nCREATE TABLE race\n(\n    id   INTEGER not null\n            primary key,\n    race TEXT default NULL\n)\n\nCREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key,\n    superhero_name TEXT default NULL,\n    full_name      TEXT default NULL,\n    gender_id      INTEGER          default NULL,\n    eye_colour_id  INTEGER          default NULL,\n    hair_colour_id INTEGER          default NULL,\n    skin_colour_id INTEGER          default NULL,\n    race_id        INTEGER          default NULL,\n    publisher_id   INTEGER          default NULL,\n    alignment_id   INTEGER          default NULL,\n    height_cm      INTEGER          default NULL,\n    weight_kg      INTEGER          default NULL,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)\n\nCREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL,\n    attribute_id    INTEGER default NULL,\n    attribute_value INTEGER default NULL,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)\n\nCREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key,\n    power_name TEXT default NULL\n)\n\nCREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL,\n    power_id INTEGER default NULL,\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)",
      "enhanced_ddl": "CREATE TABLE alignment\n(\n    id        INTEGER not null\n            primary key -- the unique identifier of the alignment,\n    alignment TEXT default NULL -- the alignment of the superhero\n)\n\nCREATE TABLE attribute\n(\n    id             INTEGER not null\n            primary key -- the unique identifier of the attribute,\n    attribute_name TEXT default NULL -- the attribute\n)\n\nCREATE TABLE colour\n(\n    id     INTEGER not null\n            primary key -- the unique identifier of the color,\n    colour TEXT default NULL -- the color of the superhero''s skin/eye/hair/etc\n)\n\nCREATE TABLE gender\n(\n    id     INTEGER not null\n            primary key -- the unique identifier of the gender,\n    gender TEXT default NULL -- the gender of the superhero\n)\n\nCREATE TABLE publisher\n(\n    id             INTEGER not null\n            primary key -- the unique identifier of the publisher,\n    publisher_name TEXT default NULL -- the name of the publisher\n)\n\nCREATE TABLE race\n(\n    id   INTEGER not null\n            primary key -- the unique identifier of the race,\n    race TEXT default NULL -- the race of the superhero\n)\n\nCREATE TABLE superhero\n(\n    id             INTEGER not null\n            primary key -- the unique identifier of the superhero,\n    superhero_name TEXT default NULL -- the name of the superhero,\n    full_name      TEXT default NULL -- the full name of the superhero,\n    gender_id      INTEGER          default NULL -- the id of the superhero''s gender,\n    eye_colour_id  INTEGER          default NULL -- the id of the superhero''s eye color,\n    hair_colour_id INTEGER          default NULL -- the id of the superhero''s hair color,\n    skin_colour_id INTEGER          default NULL -- the id of the superhero''s skin color,\n    race_id        INTEGER          default NULL -- the id of the superhero''s race,\n    publisher_id   INTEGER          default NULL -- the id of the publisher,\n    alignment_id   INTEGER          default NULL -- the id of the superhero''s alignment,\n    height_cm      INTEGER          default NULL -- the height of the superhero,\n    weight_kg      INTEGER          default NULL -- the weight of the superhero,\n    foreign key (alignment_id) references alignment(id),\n    foreign key (eye_colour_id) references colour(id),\n    foreign key (gender_id) references gender(id),\n    foreign key (hair_colour_id) references colour(id),\n    foreign key (publisher_id) references publisher(id),\n    foreign key (race_id) references race(id),\n    foreign key (skin_colour_id) references colour(id)\n)\n\nCREATE TABLE hero_attribute\n(\n    hero_id         INTEGER default NULL -- the id of the hero\nMaps to superhero(id),\n    attribute_id    INTEGER default NULL -- the id of the attribute\nMaps to attribute(id),\n    attribute_value INTEGER default NULL -- the attribute value,\n    foreign key (attribute_id) references attribute(id),\n    foreign key (hero_id) references superhero(id)\n)\n\nCREATE TABLE superpower\n(\n    id         INTEGER not null\n            primary key -- the unique identifier of the superpower,\n    power_name TEXT default NULL -- the superpower name\n)\n\nCREATE TABLE hero_power\n(\n    hero_id  INTEGER default NULL -- the id of the hero\nMaps to superhero(id),\n    power_id INTEGER default NULL -- the id of the power\nMaps to superpower(id),\n    foreign key (hero_id) references superhero(id),\n    foreign key (power_id) references superpower(id)\n)"
    },
    "debit_card_specializing": {
      "db_id": "debit_card_specializing",
      "tables": {
        "customers": {
          "name": "customers",
          "columns": [
            {
              "name": "CustomerID",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "Segment",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Currency",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "CustomerID"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)",
          "enhanced_ddl": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key -- identification of the customer,\n    Segment    TEXT null -- client segment,\n    Currency   TEXT null -- Currency\n)"
        },
        "gasstations": {
          "name": "gasstations",
          "columns": [
            {
              "name": "GasStationID",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "ChainID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Country",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Segment",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "GasStationID"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)",
          "enhanced_ddl": "CREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key -- Gas Station ID,\n    ChainID      INTEGER          null -- Chain ID,\n    Country      TEXT null,\n    Segment      TEXT null -- chain segment\n)"
        },
        "products": {
          "name": "products",
          "columns": [
            {
              "name": "ProductID",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "Description",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "ProductID"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)",
          "enhanced_ddl": "CREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key -- Product ID,\n    Description TEXT null -- Description\n)"
        },
        "transactions_1k": {
          "name": "transactions_1k",
          "columns": [
            {
              "name": "TransactionID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Date",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "Time",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "CustomerID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CardID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "GasStationID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ProductID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Amount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Price",
              "type": "REAL",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "TransactionID"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)",
          "enhanced_ddl": "CREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement -- Transaction ID,\n    Date          DATE -- Date,\n    Time          TEXT -- Time,\n    CustomerID    INTEGER -- Customer ID,\n    CardID        INTEGER -- Card ID,\n    GasStationID  INTEGER -- Gas Station ID,\n    ProductID     INTEGER -- Product ID,\n    Amount        INTEGER -- Amount,\n    Price         REAL -- Price\n)"
        },
        "yearmonth": {
          "name": "yearmonth",
          "columns": [
            {
              "name": "CustomerID",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "Date",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "Consumption",
              "type": "REAL",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "CustomerID",
            "Date"
          ],
          "foreign_keys": [
            {
              "from": "CustomerID",
              "to_table": "customers",
              "to_column": "CustomerID"
            },
            {
              "from": "CustomerID",
              "to_table": "customers",
              "to_column": "CustomerID"
            }
          ],
          "ddl": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)",
          "enhanced_ddl": "CREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers -- Customer ID,\n    Date        TEXT    not null -- Date,\n    Consumption REAL -- consumption,\n    primary key (Date, CustomerID)\n)"
        }
      },
      "ddl": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key,\n    Segment    TEXT null,\n    Currency   TEXT null\n)\n\nCREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key,\n    ChainID      INTEGER          null,\n    Country      TEXT null,\n    Segment      TEXT null\n)\n\nCREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key,\n    Description TEXT null\n)\n\nCREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement,\n    Date          DATE,\n    Time          TEXT,\n    CustomerID    INTEGER,\n    CardID        INTEGER,\n    GasStationID  INTEGER,\n    ProductID     INTEGER,\n    Amount        INTEGER,\n    Price         REAL\n)\n\nCREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers,\n    Date        TEXT    not null,\n    Consumption REAL,\n    primary key (Date, CustomerID)\n)",
      "enhanced_ddl": "CREATE TABLE customers\n(\n    CustomerID INTEGER UNIQUE     not null\n        primary key -- identification of the customer,\n    Segment    TEXT null -- client segment,\n    Currency   TEXT null -- Currency\n)\n\nCREATE TABLE gasstations\n(\n    GasStationID INTEGER    UNIQUE   not null\n        primary key -- Gas Station ID,\n    ChainID      INTEGER          null -- Chain ID,\n    Country      TEXT null,\n    Segment      TEXT null -- chain segment\n)\n\nCREATE TABLE products\n(\n    ProductID   INTEGER   UNIQUE      not null\n        primary key -- Product ID,\n    Description TEXT null -- Description\n)\n\nCREATE TABLE \"transactions_1k\"\n(\n    TransactionID INTEGER\n        primary key autoincrement -- Transaction ID,\n    Date          DATE -- Date,\n    Time          TEXT -- Time,\n    CustomerID    INTEGER -- Customer ID,\n    CardID        INTEGER -- Card ID,\n    GasStationID  INTEGER -- Gas Station ID,\n    ProductID     INTEGER -- Product ID,\n    Amount        INTEGER -- Amount,\n    Price         REAL -- Price\n)\n\nCREATE TABLE \"yearmonth\"\n(\n    CustomerID  INTEGER not null\n        references customers\n            on update cascade on delete cascade\n        references customers -- Customer ID,\n    Date        TEXT    not null -- Date,\n    Consumption REAL -- consumption,\n    primary key (Date, CustomerID)\n)"
    },
    "financial": {
      "db_id": "financial",
      "tables": {
        "account": {
          "name": "account",
          "columns": [
            {
              "name": "account_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "district_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "frequency",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "date",
              "type": "DATE",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "account_id"
          ],
          "foreign_keys": [
            {
              "from": "district_id",
              "to_table": "district",
              "to_column": "district_id"
            }
          ],
          "ddl": "CREATE TABLE account\n(\n    account_id  INTEGER default 0 not null\n        primary key,\n    district_id INTEGER default 0 not null,\n    frequency   TEXT   not null,\n    date        DATE          not null,\n    foreign key (district_id) references district (district_id)\n)",
          "enhanced_ddl": "CREATE TABLE account\n(\n    account_id  INTEGER default 0 not null\n        primary key -- the id of the account,\n    district_id INTEGER default 0 not null -- location of branch,\n    frequency   TEXT   not null -- frequency of the acount,\n    date        DATE          not null -- the creation date of the account,\n    foreign key (district_id) references district (district_id)\n)"
        },
        "card": {
          "name": "card",
          "columns": [
            {
              "name": "card_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "disp_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "issued",
              "type": "DATE",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "card_id"
          ],
          "foreign_keys": [
            {
              "from": "disp_id",
              "to_table": "disp",
              "to_column": "disp_id"
            }
          ],
          "ddl": "CREATE TABLE card\n(\n    card_id INTEGER default 0 not null\n        primary key,\n    disp_id INTEGER           not null,\n    type    TEXT    not null,\n    issued  DATE          not null,\n    foreign key (disp_id) references disp (disp_id)\n)",
          "enhanced_ddl": "CREATE TABLE card\n(\n    card_id INTEGER default 0 not null\n        primary key -- id number of credit card,\n    disp_id INTEGER           not null -- disposition id,\n    type    TEXT    not null -- type of credit card,\n    issued  DATE          not null -- the date when the credit card issued ,\n    foreign key (disp_id) references disp (disp_id)\n)"
        },
        "client": {
          "name": "client",
          "columns": [
            {
              "name": "client_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "gender",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "birth_date",
              "type": "DATE",
              "notnull": true,
              "default": null
            },
            {
              "name": "district_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "client_id"
          ],
          "foreign_keys": [
            {
              "from": "district_id",
              "to_table": "district",
              "to_column": "district_id"
            }
          ],
          "ddl": "CREATE TABLE client\n(\n    client_id   INTEGER        not null\n        primary key,\n    gender      TEXT not null,\n    birth_date  DATE       not null,\n    district_id INTEGER        not null,\n    foreign key (district_id) references district (district_id)\n)",
          "enhanced_ddl": "CREATE TABLE client\n(\n    client_id   INTEGER        not null\n        primary key -- the unique number,\n    gender      TEXT not null,\n    birth_date  DATE       not null -- birth date,\n    district_id INTEGER        not null -- location of branch,\n    foreign key (district_id) references district (district_id)\n)"
        },
        "disp": {
          "name": "disp",
          "columns": [
            {
              "name": "disp_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "client_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "account_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "disp_id"
          ],
          "foreign_keys": [
            {
              "from": "client_id",
              "to_table": "client",
              "to_column": "client_id"
            },
            {
              "from": "account_id",
              "to_table": "account",
              "to_column": "account_id"
            }
          ],
          "ddl": "CREATE TABLE disp\n(\n    disp_id    INTEGER        not null\n        primary key,\n    client_id  INTEGER        not null,\n    account_id INTEGER        not null,\n    type      TEXT not null,\n    foreign key (account_id) references account (account_id),\n    foreign key (client_id) references client (client_id)\n)",
          "enhanced_ddl": "CREATE TABLE disp\n(\n    disp_id    INTEGER        not null\n        primary key -- unique number of identifying this row of record,\n    client_id  INTEGER        not null -- id number of client,\n    account_id INTEGER        not null -- id number of account,\n    type      TEXT not null -- type of disposition,\n    foreign key (account_id) references account (account_id),\n    foreign key (client_id) references client (client_id)\n)"
        },
        "district": {
          "name": "district",
          "columns": [
            {
              "name": "district_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "A2",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "A3",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "A4",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "A5",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "A6",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "A7",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "A8",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "A9",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "A10",
              "type": "REAL",
              "notnull": true,
              "default": null
            },
            {
              "name": "A11",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "A12",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "A13",
              "type": "REAL",
              "notnull": true,
              "default": null
            },
            {
              "name": "A14",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "A15",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "A16",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "district_id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE district\n(\n    district_id INTEGER default 0 not null\n        primary key,\n    A2          TEXT   not null,\n    A3          TEXT   not null,\n    A4          TEXT       not null,\n    A5          TEXT           not null,\n    A6          TEXT           not null,\n    A7          TEXT           not null,\n    A8          INTEGER        not null,\n    A9          INTEGER           not null,\n    A10         REAL not null,\n    A11         INTEGER           not null,\n    A12         REAL null,\n    A13         REAL not null,\n    A14         INTEGER           not null,\n    A15         INTEGER        null,\n    A16         INTEGER          not null\n)",
          "enhanced_ddl": "CREATE TABLE district\n(\n    district_id INTEGER default 0 not null\n        primary key -- location of branch,\n    A2          TEXT   not null -- district_name,\n    A3          TEXT   not null -- region,\n    A4          TEXT       not null,\n    A5          TEXT           not null -- municipality < district < region,\n    A6          TEXT           not null -- municipality < district < region,\n    A7          TEXT           not null -- municipality < district < region,\n    A8          INTEGER        not null -- municipality < district < region,\n    A9          INTEGER           not null,\n    A10         REAL not null -- ratio of urban inhabitants,\n    A11         INTEGER           not null -- average salary,\n    A12         REAL null -- unemployment rate 1995,\n    A13         REAL not null -- unemployment rate 1996,\n    A14         INTEGER           not null -- no. of entrepreneurs per 1000 inhabitants,\n    A15         INTEGER        null -- no. of committed crimes 1995,\n    A16         INTEGER          not null -- no. of committed crimes 1996\n)"
        },
        "loan": {
          "name": "loan",
          "columns": [
            {
              "name": "loan_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "account_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "date",
              "type": "DATE",
              "notnull": true,
              "default": null
            },
            {
              "name": "amount",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "duration",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "payments",
              "type": "REAL",
              "notnull": true,
              "default": null
            },
            {
              "name": "status",
              "type": "TEXT",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "loan_id"
          ],
          "foreign_keys": [
            {
              "from": "account_id",
              "to_table": "account",
              "to_column": "account_id"
            }
          ],
          "ddl": "CREATE TABLE loan\n(\n    loan_id    INTEGER default 0 not null\n        primary key,\n    account_id INTEGER           not null,\n    date       DATE          not null,\n    amount     INTEGER           not null,\n    duration   INTEGER           not null,\n    payments   REAL not null,\n    status     TEXT    not null,\n    foreign key (account_id) references account (account_id)\n)",
          "enhanced_ddl": "CREATE TABLE loan\n(\n    loan_id    INTEGER default 0 not null\n        primary key -- the id number identifying the loan data,\n    account_id INTEGER           not null -- the id number identifying the account,\n    date       DATE          not null -- the date when the loan is approved,\n    amount     INTEGER           not null -- approved amount,\n    duration   INTEGER           not null -- loan duration,\n    payments   REAL not null -- monthly payments,\n    status     TEXT    not null -- repayment status,\n    foreign key (account_id) references account (account_id)\n)"
        },
        "order": {
          "name": "order",
          "columns": [
            {
              "name": "order_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "account_id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "bank_to",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "account_to",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "amount",
              "type": "REAL",
              "notnull": true,
              "default": null
            },
            {
              "name": "k_symbol",
              "type": "TEXT",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "order_id"
          ],
          "foreign_keys": [
            {
              "from": "account_id",
              "to_table": "account",
              "to_column": "account_id"
            }
          ],
          "ddl": "CREATE TABLE `order`\n(\n    order_id   INTEGER default 0 not null\n        primary key,\n    account_id INTEGER           not null,\n    bank_to    TEXT    not null,\n    account_to INTEGER           not null,\n    amount     REAL not null,\n    k_symbol   TEXT    not null,\n    foreign key (account_id) references account (account_id)\n)",
          "enhanced_ddl": "CREATE TABLE `order`\n(\n    order_id   INTEGER default 0 not null\n        primary key -- identifying the unique order,\n    account_id INTEGER           not null -- id number of account,\n    bank_to    TEXT    not null -- bank of the recipient,\n    account_to INTEGER           not null -- account of the recipient,\n    amount     REAL not null -- debited amount,\n    k_symbol   TEXT    not null -- purpose of the payment,\n    foreign key (account_id) references account (account_id)\n)"
        },
        "trans": {
          "name": "trans",
          "columns": [
            {
              "name": "trans_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "account_id",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "date",
              "type": "DATE",
              "notnull": true,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "operation",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "amount",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "balance",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "k_symbol",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "bank",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "account",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "trans_id"
          ],
          "foreign_keys": [
            {
              "from": "account_id",
              "to_table": "account",
              "to_column": "account_id"
            }
          ],
          "ddl": "CREATE TABLE trans\n(\n    trans_id   INTEGER default 0    not null\n        primary key,\n    account_id INTEGER default 0    not null,\n    date       DATE             not null,\n    type       TEXT       not null,\n    operation  TEXT      null,\n    amount     INTEGER              not null,\n    balance    INTEGER             not null,\n    k_symbol   TEXT      null,\n    bank       TEXT       null,\n    account    INTEGER          null,\n    foreign key (account_id) references account (account_id)\n)",
          "enhanced_ddl": "CREATE TABLE trans\n(\n    trans_id   INTEGER default 0    not null\n        primary key -- transaction id,\n    account_id INTEGER default 0    not null,\n    date       DATE             not null -- date of transaction,\n    type       TEXT       not null -- +/- transaction,\n    operation  TEXT      null -- mode of transaction,\n    amount     INTEGER              not null -- amount of money,\n    balance    INTEGER             not null -- balance after transaction,\n    k_symbol   TEXT      null,\n    bank       TEXT       null,\n    account    INTEGER          null,\n    foreign key (account_id) references account (account_id)\n)"
        }
      },
      "ddl": "CREATE TABLE account\n(\n    account_id  INTEGER default 0 not null\n        primary key,\n    district_id INTEGER default 0 not null,\n    frequency   TEXT   not null,\n    date        DATE          not null,\n    foreign key (district_id) references district (district_id)\n)\n\nCREATE TABLE card\n(\n    card_id INTEGER default 0 not null\n        primary key,\n    disp_id INTEGER           not null,\n    type    TEXT    not null,\n    issued  DATE          not null,\n    foreign key (disp_id) references disp (disp_id)\n)\n\nCREATE TABLE client\n(\n    client_id   INTEGER        not null\n        primary key,\n    gender      TEXT not null,\n    birth_date  DATE       not null,\n    district_id INTEGER        not null,\n    foreign key (district_id) references district (district_id)\n)\n\nCREATE TABLE disp\n(\n    disp_id    INTEGER        not null\n        primary key,\n    client_id  INTEGER        not null,\n    account_id INTEGER        not null,\n    type      TEXT not null,\n    foreign key (account_id) references account (account_id),\n    foreign key (client_id) references client (client_id)\n)\n\nCREATE TABLE district\n(\n    district_id INTEGER default 0 not null\n        primary key,\n    A2          TEXT   not null,\n    A3          TEXT   not null,\n    A4          TEXT       not null,\n    A5          TEXT           not null,\n    A6          TEXT           not null,\n    A7          TEXT           not null,\n    A8          INTEGER        not null,\n    A9          INTEGER           not null,\n    A10         REAL not null,\n    A11         INTEGER           not null,\n    A12         REAL null,\n    A13         REAL not null,\n    A14         INTEGER           not null,\n    A15         INTEGER        null,\n    A16         INTEGER          not null\n)\n\nCREATE TABLE loan\n(\n    loan_id    INTEGER default 0 not null\n        primary key,\n    account_id INTEGER           not null,\n    date       DATE          not null,\n    amount     INTEGER           not null,\n    duration   INTEGER           not null,\n    payments   REAL not null,\n    status     TEXT    not null,\n    foreign key (account_id) references account (account_id)\n)\n\nCREATE TABLE `order`\n(\n    order_id   INTEGER default 0 not null\n        primary key,\n    account_id INTEGER           not null,\n    bank_to    TEXT    not null,\n    account_to INTEGER           not null,\n    amount     REAL not null,\n    k_symbol   TEXT    not null,\n    foreign key (account_id) references account (account_id)\n)\n\nCREATE TABLE trans\n(\n    trans_id   INTEGER default 0    not null\n        primary key,\n    account_id INTEGER default 0    not null,\n    date       DATE             not null,\n    type       TEXT       not null,\n    operation  TEXT      null,\n    amount     INTEGER              not null,\n    balance    INTEGER             not null,\n    k_symbol   TEXT      null,\n    bank       TEXT       null,\n    account    INTEGER          null,\n    foreign key (account_id) references account (account_id)\n)",
      "enhanced_ddl": "CREATE TABLE account\n(\n    account_id  INTEGER default 0 not null\n        primary key -- the id of the account,\n    district_id INTEGER default 0 not null -- location of branch,\n    frequency   TEXT   not null -- frequency of the acount,\n    date        DATE          not null -- the creation date of the account,\n    foreign key (district_id) references district (district_id)\n)\n\nCREATE TABLE card\n(\n    card_id INTEGER default 0 not null\n        primary key -- id number of credit card,\n    disp_id INTEGER           not null -- disposition id,\n    type    TEXT    not null -- type of credit card,\n    issued  DATE          not null -- the date when the credit card issued ,\n    foreign key (disp_id) references disp (disp_id)\n)\n\nCREATE TABLE client\n(\n    client_id   INTEGER        not null\n        primary key -- the unique number,\n    gender      TEXT not null,\n    birth_date  DATE       not null -- birth date,\n    district_id INTEGER        not null -- location of branch,\n    foreign key (district_id) references district (district_id)\n)\n\nCREATE TABLE disp\n(\n    disp_id    INTEGER        not null\n        primary key -- unique number of identifying this row of record,\n    client_id  INTEGER        not null -- id number of client,\n    account_id INTEGER        not null -- id number of account,\n    type      TEXT not null -- type of disposition,\n    foreign key (account_id) references account (account_id),\n    foreign key (client_id) references client (client_id)\n)\n\nCREATE TABLE district\n(\n    district_id INTEGER default 0 not null\n        primary key -- location of branch,\n    A2          TEXT   not null -- district_name,\n    A3          TEXT   not null -- region,\n    A4          TEXT       not null,\n    A5          TEXT           not null -- municipality < district < region,\n    A6          TEXT           not null -- municipality < district < region,\n    A7          TEXT           not null -- municipality < district < region,\n    A8          INTEGER        not null -- municipality < district < region,\n    A9          INTEGER           not null,\n    A10         REAL not null -- ratio of urban inhabitants,\n    A11         INTEGER           not null -- average salary,\n    A12         REAL null -- unemployment rate 1995,\n    A13         REAL not null -- unemployment rate 1996,\n    A14         INTEGER           not null -- no. of entrepreneurs per 1000 inhabitants,\n    A15         INTEGER        null -- no. of committed crimes 1995,\n    A16         INTEGER          not null -- no. of committed crimes 1996\n)\n\nCREATE TABLE loan\n(\n    loan_id    INTEGER default 0 not null\n        primary key -- the id number identifying the loan data,\n    account_id INTEGER           not null -- the id number identifying the account,\n    date       DATE          not null -- the date when the loan is approved,\n    amount     INTEGER           not null -- approved amount,\n    duration   INTEGER           not null -- loan duration,\n    payments   REAL not null -- monthly payments,\n    status     TEXT    not null -- repayment status,\n    foreign key (account_id) references account (account_id)\n)\n\nCREATE TABLE `order`\n(\n    order_id   INTEGER default 0 not null\n        primary key -- identifying the unique order,\n    account_id INTEGER           not null -- id number of account,\n    bank_to    TEXT    not null -- bank of the recipient,\n    account_to INTEGER           not null -- account of the recipient,\n    amount     REAL not null -- debited amount,\n    k_symbol   TEXT    not null -- purpose of the payment,\n    foreign key (account_id) references account (account_id)\n)\n\nCREATE TABLE trans\n(\n    trans_id   INTEGER default 0    not null\n        primary key -- transaction id,\n    account_id INTEGER default 0    not null,\n    date       DATE             not null -- date of transaction,\n    type       TEXT       not null -- +/- transaction,\n    operation  TEXT      null -- mode of transaction,\n    amount     INTEGER              not null -- amount of money,\n    balance    INTEGER             not null -- balance after transaction,\n    k_symbol   TEXT      null,\n    bank       TEXT       null,\n    account    INTEGER          null,\n    foreign key (account_id) references account (account_id)\n)"
    },
    "european_football_2": {
      "db_id": "european_football_2",
      "tables": {
        "Player_Attributes": {
          "name": "Player_Attributes",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "player_fifa_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "player_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "date",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "overall_rating",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "potential",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "preferred_foot",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "attacking_work_rate",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "defensive_work_rate",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "crossing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "finishing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "heading_accuracy",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "short_passing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "volleys",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "dribbling",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "curve",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "free_kick_accuracy",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "long_passing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ball_control",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "acceleration",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "sprint_speed",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "agility",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "reactions",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "balance",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "shot_power",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "jumping",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "stamina",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "strength",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "long_shots",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "aggression",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "interceptions",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "positioning",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "vision",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "penalties",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "marking",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "standing_tackle",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "sliding_tackle",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "gk_diving",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "gk_handling",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "gk_kicking",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "gk_positioning",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "gk_reflexes",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "player_api_id",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "player_fifa_api_id",
              "to_table": "Player",
              "to_column": "player_fifa_api_id"
            }
          ],
          "ddl": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)",
          "enhanced_ddl": "CREATE TABLE \"Player_Attributes\" (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for players,\n    `player_fifa_api_id`\tINTEGER -- the id of the player fifa api,\n    `player_api_id`\tINTEGER -- the id of the player api,\n    `date`\tTEXT -- date,\n    `overall_rating`\tINTEGER -- the overall rating of the player,\n    `potential`\tINTEGER -- potential of the player,\n    `preferred_foot`\tTEXT -- the player''s preferred foot when attacking,\n    `attacking_work_rate`\tTEXT -- the player''s attacking work rate,\n    `defensive_work_rate`\tTEXT -- the player''s defensive work rate,\n    `crossing`\tINTEGER -- the player''s crossing score ,\n    `finishing`\tINTEGER -- the player''s finishing rate,\n    `heading_accuracy`\tINTEGER -- the player''s heading accuracy,\n    `short_passing`\tINTEGER -- the player''s short passing score,\n    `volleys`\tINTEGER -- the player''s volley score,\n    `dribbling`\tINTEGER -- the player''s dribbling score,\n    `curve`\tINTEGER -- the player''s curve score,\n    `free_kick_accuracy`\tINTEGER -- the player''s free kick accuracy,\n    `long_passing`\tINTEGER -- the player''s long passing score,\n    `ball_control`\tINTEGER -- the player''s ball control score,\n    `acceleration`\tINTEGER -- the player''s acceleration score,\n    `sprint_speed`\tINTEGER -- the player''s sprint speed\n,\n    `agility`\tINTEGER -- the player''s agility,\n    `reactions`\tINTEGER -- the player''s reactions score,\n    `balance`\tINTEGER -- the player''s balance score,\n    `shot_power`\tINTEGER -- the player''s shot power,\n    `jumping`\tINTEGER -- the player''s jumping score,\n    `stamina`\tINTEGER -- the player''s stamina score,\n    `strength`\tINTEGER -- the player''s strength score,\n    `long_shots`\tINTEGER -- the player''s long shots score,\n    `aggression`\tINTEGER -- the player''s aggression score,\n    `interceptions`\tINTEGER -- the player''s interceptions score,\n    `positioning`\tINTEGER -- the player''s \npositioning score\n,\n    `vision`\tINTEGER -- the player''s vision score\n,\n    `penalties`\tINTEGER -- the player''s penalties score\n,\n    `marking`\tINTEGER -- the player''s markingscore,\n    `standing_tackle`\tINTEGER -- the player''s standing tackle score,\n    `sliding_tackle`\tINTEGER -- the player''s sliding tackle score,\n    `gk_diving`\tINTEGER -- the player''s goalkeep diving score,\n    `gk_handling`\tINTEGER -- the player''s goalkeep diving score,\n    `gk_kicking`\tINTEGER -- the player''s goalkeep kicking score,\n    `gk_positioning`\tINTEGER -- the player''s goalkeep positioning score,\n    `gk_reflexes`\tINTEGER -- the player''s goalkeep reflexes score,\n    FOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n    FOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)"
        },
        "Player": {
          "name": "Player",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "player_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "player_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "player_fifa_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "birthday",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "height",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "weight",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)",
          "enhanced_ddl": "CREATE TABLE `Player` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for players,\n    `player_api_id`\tINTEGER UNIQUE -- the id of the player api,\n    `player_name`\tTEXT -- player name,\n    `player_fifa_api_id`\tINTEGER UNIQUE -- the id of the player fifa api,\n    `birthday`\tTEXT -- the player''s birthday,\n    `height`\tINTEGER -- the player''s height,\n    `weight`\tINTEGER -- the player''s weight\n)"
        },
        "League": {
          "name": "League",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "country_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "country_id",
              "to_table": "country",
              "to_column": "id"
            }
          ],
          "ddl": "CREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)",
          "enhanced_ddl": "CREATE TABLE `League` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for leagues,\n    `country_id`\tINTEGER -- the unique id for countries,\n    `name`\tTEXT UNIQUE -- league name,\n    FOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)"
        },
        "Country": {
          "name": "Country",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)",
          "enhanced_ddl": "CREATE TABLE `Country` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for countries,\n    `name`\tTEXT UNIQUE -- country name\n)"
        },
        "Team": {
          "name": "Team",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "team_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "team_fifa_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "team_long_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "team_short_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)",
          "enhanced_ddl": "CREATE TABLE \"Team\" (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for teams,\n    `team_api_id`\tINTEGER UNIQUE -- the id of the team api,\n    `team_fifa_api_id`\tINTEGER -- the id of the team fifa api,\n    `team_long_name`\tTEXT -- the team''s long name,\n    `team_short_name`\tTEXT -- the team''s short name\n)"
        },
        "Team_Attributes": {
          "name": "Team_Attributes",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "team_fifa_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "team_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "date",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlaySpeed",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlaySpeedClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlayDribbling",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlayDribblingClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlayPassing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlayPassingClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "buildUpPlayPositioningClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationPassing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationPassingClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationCrossing",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationCrossingClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationShooting",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationShootingClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "chanceCreationPositioningClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "defencePressure",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "defencePressureClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "defenceAggression",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "defenceAggressionClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "defenceTeamWidth",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "defenceTeamWidthClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "defenceDefenderLineClass",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "team_api_id",
              "to_table": "Team",
              "to_column": "team_api_id"
            },
            {
              "from": "team_fifa_api_id",
              "to_table": "Team",
              "to_column": "team_fifa_api_id"
            }
          ],
          "ddl": "CREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)",
          "enhanced_ddl": "CREATE TABLE `Team_Attributes` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for teams,\n    `team_fifa_api_id`\tINTEGER -- the id of the team fifa api,\n    `team_api_id`\tINTEGER -- the id of the team api,\n    `date`\tTEXT -- Date,\n    `buildUpPlaySpeed`\tINTEGER -- the speed in which attacks are put together ,\n    `buildUpPlaySpeedClass`\tTEXT -- the speed class,\n    `buildUpPlayDribbling`\tINTEGER -- the tendency/ frequency of dribbling,\n    `buildUpPlayDribblingClass`\tTEXT -- the dribbling class,\n    `buildUpPlayPassing`\tINTEGER -- affects passing distance and support from teammates,\n    `buildUpPlayPassingClass`\tTEXT -- the passing class,\n    `buildUpPlayPositioningClass`\tTEXT -- A team''s freedom of movement in the 1st two thirds of the pitch,\n    `chanceCreationPassing`\tINTEGER -- Amount of risk in pass decision and run support,\n    `chanceCreationPassingClass`\tTEXT -- the chance creation passing class,\n    `chanceCreationCrossing`\tINTEGER -- The tendency / frequency of crosses into the box,\n    `chanceCreationCrossingClass`\tTEXT -- the chance creation crossing class,\n    `chanceCreationShooting`\tINTEGER -- The tendency / frequency of shots taken,\n    `chanceCreationShootingClass`\tTEXT -- the chance creation shooting class,\n    `chanceCreationPositioningClass`\tTEXT -- A teams freedom of movement in the final third of the pitch,\n    `defencePressure`\tINTEGER -- Affects how high up the pitch the team will start pressuring,\n    `defencePressureClass`\tTEXT -- the defence pressure class,\n    `defenceAggression`\tINTEGER -- Affect the teams approach to tackling the ball possessor,\n    `defenceAggressionClass`\tTEXT -- the defence aggression class,\n    `defenceTeamWidth`\tINTEGER -- Affects how much the team will shift to the ball side,\n    `defenceTeamWidthClass`\tTEXT -- the defence team width class,\n    `defenceDefenderLineClass`\tTEXT -- Affects the shape and strategy of the defence,\n    FOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n    FOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)"
        },
        "Match": {
          "name": "Match",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "country_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "league_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "season",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "stage",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "date",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "match_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_team_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_team_api_id",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_team_goal",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_team_goal",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X1",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X5",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X6",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X7",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X8",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X9",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X10",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_X11",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X1",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X5",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X6",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X7",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X8",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X9",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X10",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_X11",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y1",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y5",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y6",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y7",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y8",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y9",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y10",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_Y11",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y1",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y5",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y6",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y7",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y8",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y9",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y10",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_Y11",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_1",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_5",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_6",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_7",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_8",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_9",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_10",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "home_player_11",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_1",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_5",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_6",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_7",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_8",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_9",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_10",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "away_player_11",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "goal",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "shoton",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "shotoff",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "foulcommit",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "card",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "cross",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "corner",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "possession",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "B365H",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "B365D",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "B365A",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "BWH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "BWD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "BWA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "IWH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "IWD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "IWA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "LBH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "LBD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "LBA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "PSH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "PSD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "PSA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "WHH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "WHD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "WHA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "SJH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "SJD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "SJA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "VCH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "VCD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "VCA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "GBH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "GBD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "GBA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "BSH",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "BSD",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "BSA",
              "type": "REAL",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "away_player_11",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_10",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_9",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_8",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_7",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_6",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_5",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_4",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_3",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_2",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_player_1",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_11",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_10",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_9",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_8",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_7",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_6",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_5",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_4",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_3",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_2",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "home_player_1",
              "to_table": "Player",
              "to_column": "player_api_id"
            },
            {
              "from": "away_team_api_id",
              "to_table": "Team",
              "to_column": "team_api_id"
            },
            {
              "from": "home_team_api_id",
              "to_table": "Team",
              "to_column": "team_api_id"
            },
            {
              "from": "league_id",
              "to_table": "League",
              "to_column": "id"
            },
            {
              "from": "country_id",
              "to_table": "Country",
              "to_column": "id"
            }
          ],
          "ddl": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)",
          "enhanced_ddl": "CREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement -- the unique id for matches,\n    country_id       INTEGER\n        references Country -- country id,\n    league_id        INTEGER\n        references League -- league id,\n    season           TEXT -- the season of the match,\n    stage            INTEGER -- the stage of the match,\n    date             TEXT -- the date of the match,\n    match_api_id     INTEGER\n        unique -- the id of the match api,\n    home_team_api_id INTEGER\n        references Team (team_api_id) -- the id of the home team api,\n    away_team_api_id INTEGER\n        references Team (team_api_id) -- the id of the away team api,\n    home_team_goal   INTEGER -- the goal of the home team,\n    away_team_goal   INTEGER -- the goal of the away team,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT -- the goal of the match,\n    shoton           TEXT -- the shot on goal of the match,\n    shotoff          TEXT -- the shot off goal of the match, which is the opposite of shot on,\n    foulcommit       TEXT -- the fouls occurred in the match,\n    card             TEXT -- the cards given in the match,\n    \"cross\"          TEXT -- Balls sent into the opposition team''s area from a wide position in the match,\n    corner           TEXT -- Ball goes out of play for a corner kick in the match,\n    possession       TEXT -- The duration from a player taking over the ball in the match,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
        }
      },
      "ddl": "CREATE TABLE \"Player_Attributes\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_fifa_api_id`\tINTEGER,\n\t`player_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`overall_rating`\tINTEGER,\n\t`potential`\tINTEGER,\n\t`preferred_foot`\tTEXT,\n\t`attacking_work_rate`\tTEXT,\n\t`defensive_work_rate`\tTEXT,\n\t`crossing`\tINTEGER,\n\t`finishing`\tINTEGER,\n\t`heading_accuracy`\tINTEGER,\n\t`short_passing`\tINTEGER,\n\t`volleys`\tINTEGER,\n\t`dribbling`\tINTEGER,\n\t`curve`\tINTEGER,\n\t`free_kick_accuracy`\tINTEGER,\n\t`long_passing`\tINTEGER,\n\t`ball_control`\tINTEGER,\n\t`acceleration`\tINTEGER,\n\t`sprint_speed`\tINTEGER,\n\t`agility`\tINTEGER,\n\t`reactions`\tINTEGER,\n\t`balance`\tINTEGER,\n\t`shot_power`\tINTEGER,\n\t`jumping`\tINTEGER,\n\t`stamina`\tINTEGER,\n\t`strength`\tINTEGER,\n\t`long_shots`\tINTEGER,\n\t`aggression`\tINTEGER,\n\t`interceptions`\tINTEGER,\n\t`positioning`\tINTEGER,\n\t`vision`\tINTEGER,\n\t`penalties`\tINTEGER,\n\t`marking`\tINTEGER,\n\t`standing_tackle`\tINTEGER,\n\t`sliding_tackle`\tINTEGER,\n\t`gk_diving`\tINTEGER,\n\t`gk_handling`\tINTEGER,\n\t`gk_kicking`\tINTEGER,\n\t`gk_positioning`\tINTEGER,\n\t`gk_reflexes`\tINTEGER,\n\tFOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n\tFOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)\n\nCREATE TABLE `Player` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`player_api_id`\tINTEGER UNIQUE,\n\t`player_name`\tTEXT,\n\t`player_fifa_api_id`\tINTEGER UNIQUE,\n\t`birthday`\tTEXT,\n\t`height`\tINTEGER,\n\t`weight`\tINTEGER\n)\n\nCREATE TABLE `League` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`country_id`\tINTEGER,\n\t`name`\tTEXT UNIQUE,\n\tFOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)\n\nCREATE TABLE `Country` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`name`\tTEXT UNIQUE\n)\n\nCREATE TABLE \"Team\" (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_api_id`\tINTEGER UNIQUE,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_long_name`\tTEXT,\n\t`team_short_name`\tTEXT\n)\n\nCREATE TABLE `Team_Attributes` (\n\t`id`\tINTEGER PRIMARY KEY AUTOINCREMENT,\n\t`team_fifa_api_id`\tINTEGER,\n\t`team_api_id`\tINTEGER,\n\t`date`\tTEXT,\n\t`buildUpPlaySpeed`\tINTEGER,\n\t`buildUpPlaySpeedClass`\tTEXT,\n\t`buildUpPlayDribbling`\tINTEGER,\n\t`buildUpPlayDribblingClass`\tTEXT,\n\t`buildUpPlayPassing`\tINTEGER,\n\t`buildUpPlayPassingClass`\tTEXT,\n\t`buildUpPlayPositioningClass`\tTEXT,\n\t`chanceCreationPassing`\tINTEGER,\n\t`chanceCreationPassingClass`\tTEXT,\n\t`chanceCreationCrossing`\tINTEGER,\n\t`chanceCreationCrossingClass`\tTEXT,\n\t`chanceCreationShooting`\tINTEGER,\n\t`chanceCreationShootingClass`\tTEXT,\n\t`chanceCreationPositioningClass`\tTEXT,\n\t`defencePressure`\tINTEGER,\n\t`defencePressureClass`\tTEXT,\n\t`defenceAggression`\tINTEGER,\n\t`defenceAggressionClass`\tTEXT,\n\t`defenceTeamWidth`\tINTEGER,\n\t`defenceTeamWidthClass`\tTEXT,\n\t`defenceDefenderLineClass`\tTEXT,\n\tFOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n\tFOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)\n\nCREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement,\n    country_id       INTEGER\n        references Country,\n    league_id        INTEGER\n        references League,\n    season           TEXT,\n    stage            INTEGER,\n    date             TEXT,\n    match_api_id     INTEGER\n        unique,\n    home_team_api_id INTEGER\n        references Team (team_api_id),\n    away_team_api_id INTEGER\n        references Team (team_api_id),\n    home_team_goal   INTEGER,\n    away_team_goal   INTEGER,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT,\n    shoton           TEXT,\n    shotoff          TEXT,\n    foulcommit       TEXT,\n    card             TEXT,\n    \"cross\"          TEXT,\n    corner           TEXT,\n    possession       TEXT,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)",
      "enhanced_ddl": "CREATE TABLE \"Player_Attributes\" (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for players,\n    `player_fifa_api_id`\tINTEGER -- the id of the player fifa api,\n    `player_api_id`\tINTEGER -- the id of the player api,\n    `date`\tTEXT -- date,\n    `overall_rating`\tINTEGER -- the overall rating of the player,\n    `potential`\tINTEGER -- potential of the player,\n    `preferred_foot`\tTEXT -- the player''s preferred foot when attacking,\n    `attacking_work_rate`\tTEXT -- the player''s attacking work rate,\n    `defensive_work_rate`\tTEXT -- the player''s defensive work rate,\n    `crossing`\tINTEGER -- the player''s crossing score ,\n    `finishing`\tINTEGER -- the player''s finishing rate,\n    `heading_accuracy`\tINTEGER -- the player''s heading accuracy,\n    `short_passing`\tINTEGER -- the player''s short passing score,\n    `volleys`\tINTEGER -- the player''s volley score,\n    `dribbling`\tINTEGER -- the player''s dribbling score,\n    `curve`\tINTEGER -- the player''s curve score,\n    `free_kick_accuracy`\tINTEGER -- the player''s free kick accuracy,\n    `long_passing`\tINTEGER -- the player''s long passing score,\n    `ball_control`\tINTEGER -- the player''s ball control score,\n    `acceleration`\tINTEGER -- the player''s acceleration score,\n    `sprint_speed`\tINTEGER -- the player''s sprint speed\n,\n    `agility`\tINTEGER -- the player''s agility,\n    `reactions`\tINTEGER -- the player''s reactions score,\n    `balance`\tINTEGER -- the player''s balance score,\n    `shot_power`\tINTEGER -- the player''s shot power,\n    `jumping`\tINTEGER -- the player''s jumping score,\n    `stamina`\tINTEGER -- the player''s stamina score,\n    `strength`\tINTEGER -- the player''s strength score,\n    `long_shots`\tINTEGER -- the player''s long shots score,\n    `aggression`\tINTEGER -- the player''s aggression score,\n    `interceptions`\tINTEGER -- the player''s interceptions score,\n    `positioning`\tINTEGER -- the player''s \npositioning score\n,\n    `vision`\tINTEGER -- the player''s vision score\n,\n    `penalties`\tINTEGER -- the player''s penalties score\n,\n    `marking`\tINTEGER -- the player''s markingscore,\n    `standing_tackle`\tINTEGER -- the player''s standing tackle score,\n    `sliding_tackle`\tINTEGER -- the player''s sliding tackle score,\n    `gk_diving`\tINTEGER -- the player''s goalkeep diving score,\n    `gk_handling`\tINTEGER -- the player''s goalkeep diving score,\n    `gk_kicking`\tINTEGER -- the player''s goalkeep kicking score,\n    `gk_positioning`\tINTEGER -- the player''s goalkeep positioning score,\n    `gk_reflexes`\tINTEGER -- the player''s goalkeep reflexes score,\n    FOREIGN KEY(`player_fifa_api_id`) REFERENCES `Player`(`player_fifa_api_id`),\n    FOREIGN KEY(`player_api_id`) REFERENCES `Player`(`player_api_id`)\n)\n\nCREATE TABLE `Player` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for players,\n    `player_api_id`\tINTEGER UNIQUE -- the id of the player api,\n    `player_name`\tTEXT -- player name,\n    `player_fifa_api_id`\tINTEGER UNIQUE -- the id of the player fifa api,\n    `birthday`\tTEXT -- the player''s birthday,\n    `height`\tINTEGER -- the player''s height,\n    `weight`\tINTEGER -- the player''s weight\n)\n\nCREATE TABLE `League` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for leagues,\n    `country_id`\tINTEGER -- the unique id for countries,\n    `name`\tTEXT UNIQUE -- league name,\n    FOREIGN KEY(`country_id`) REFERENCES `country`(`id`)\n)\n\nCREATE TABLE `Country` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for countries,\n    `name`\tTEXT UNIQUE -- country name\n)\n\nCREATE TABLE \"Team\" (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for teams,\n    `team_api_id`\tINTEGER UNIQUE -- the id of the team api,\n    `team_fifa_api_id`\tINTEGER -- the id of the team fifa api,\n    `team_long_name`\tTEXT -- the team''s long name,\n    `team_short_name`\tTEXT -- the team''s short name\n)\n\nCREATE TABLE `Team_Attributes` (\n    `id`\tINTEGER PRIMARY KEY AUTOINCREMENT -- the unique id for teams,\n    `team_fifa_api_id`\tINTEGER -- the id of the team fifa api,\n    `team_api_id`\tINTEGER -- the id of the team api,\n    `date`\tTEXT -- Date,\n    `buildUpPlaySpeed`\tINTEGER -- the speed in which attacks are put together ,\n    `buildUpPlaySpeedClass`\tTEXT -- the speed class,\n    `buildUpPlayDribbling`\tINTEGER -- the tendency/ frequency of dribbling,\n    `buildUpPlayDribblingClass`\tTEXT -- the dribbling class,\n    `buildUpPlayPassing`\tINTEGER -- affects passing distance and support from teammates,\n    `buildUpPlayPassingClass`\tTEXT -- the passing class,\n    `buildUpPlayPositioningClass`\tTEXT -- A team''s freedom of movement in the 1st two thirds of the pitch,\n    `chanceCreationPassing`\tINTEGER -- Amount of risk in pass decision and run support,\n    `chanceCreationPassingClass`\tTEXT -- the chance creation passing class,\n    `chanceCreationCrossing`\tINTEGER -- The tendency / frequency of crosses into the box,\n    `chanceCreationCrossingClass`\tTEXT -- the chance creation crossing class,\n    `chanceCreationShooting`\tINTEGER -- The tendency / frequency of shots taken,\n    `chanceCreationShootingClass`\tTEXT -- the chance creation shooting class,\n    `chanceCreationPositioningClass`\tTEXT -- A teams freedom of movement in the final third of the pitch,\n    `defencePressure`\tINTEGER -- Affects how high up the pitch the team will start pressuring,\n    `defencePressureClass`\tTEXT -- the defence pressure class,\n    `defenceAggression`\tINTEGER -- Affect the teams approach to tackling the ball possessor,\n    `defenceAggressionClass`\tTEXT -- the defence aggression class,\n    `defenceTeamWidth`\tINTEGER -- Affects how much the team will shift to the ball side,\n    `defenceTeamWidthClass`\tTEXT -- the defence team width class,\n    `defenceDefenderLineClass`\tTEXT -- Affects the shape and strategy of the defence,\n    FOREIGN KEY(`team_fifa_api_id`) REFERENCES `Team`(`team_fifa_api_id`),\n    FOREIGN KEY(`team_api_id`) REFERENCES `Team`(`team_api_id`)\n)\n\nCREATE TABLE \"Match\"\n(\n    id               INTEGER\n        primary key autoincrement -- the unique id for matches,\n    country_id       INTEGER\n        references Country -- country id,\n    league_id        INTEGER\n        references League -- league id,\n    season           TEXT -- the season of the match,\n    stage            INTEGER -- the stage of the match,\n    date             TEXT -- the date of the match,\n    match_api_id     INTEGER\n        unique -- the id of the match api,\n    home_team_api_id INTEGER\n        references Team (team_api_id) -- the id of the home team api,\n    away_team_api_id INTEGER\n        references Team (team_api_id) -- the id of the away team api,\n    home_team_goal   INTEGER -- the goal of the home team,\n    away_team_goal   INTEGER -- the goal of the away team,\n    home_player_X1   INTEGER,\n    home_player_X2   INTEGER,\n    home_player_X3   INTEGER,\n    home_player_X4   INTEGER,\n    home_player_X5   INTEGER,\n    home_player_X6   INTEGER,\n    home_player_X7   INTEGER,\n    home_player_X8   INTEGER,\n    home_player_X9   INTEGER,\n    home_player_X10  INTEGER,\n    home_player_X11  INTEGER,\n    away_player_X1   INTEGER,\n    away_player_X2   INTEGER,\n    away_player_X3   INTEGER,\n    away_player_X4   INTEGER,\n    away_player_X5   INTEGER,\n    away_player_X6   INTEGER,\n    away_player_X7   INTEGER,\n    away_player_X8   INTEGER,\n    away_player_X9   INTEGER,\n    away_player_X10  INTEGER,\n    away_player_X11  INTEGER,\n    home_player_Y1   INTEGER,\n    home_player_Y2   INTEGER,\n    home_player_Y3   INTEGER,\n    home_player_Y4   INTEGER,\n    home_player_Y5   INTEGER,\n    home_player_Y6   INTEGER,\n    home_player_Y7   INTEGER,\n    home_player_Y8   INTEGER,\n    home_player_Y9   INTEGER,\n    home_player_Y10  INTEGER,\n    home_player_Y11  INTEGER,\n    away_player_Y1   INTEGER,\n    away_player_Y2   INTEGER,\n    away_player_Y3   INTEGER,\n    away_player_Y4   INTEGER,\n    away_player_Y5   INTEGER,\n    away_player_Y6   INTEGER,\n    away_player_Y7   INTEGER,\n    away_player_Y8   INTEGER,\n    away_player_Y9   INTEGER,\n    away_player_Y10  INTEGER,\n    away_player_Y11  INTEGER,\n    home_player_1    INTEGER\n        references Player (player_api_id),\n    home_player_2    INTEGER\n        references Player (player_api_id),\n    home_player_3    INTEGER\n        references Player (player_api_id),\n    home_player_4    INTEGER\n        references Player (player_api_id),\n    home_player_5    INTEGER\n        references Player (player_api_id),\n    home_player_6    INTEGER\n        references Player (player_api_id),\n    home_player_7    INTEGER\n        references Player (player_api_id),\n    home_player_8    INTEGER\n        references Player (player_api_id),\n    home_player_9    INTEGER\n        references Player (player_api_id),\n    home_player_10   INTEGER\n        references Player (player_api_id),\n    home_player_11   INTEGER\n        references Player (player_api_id),\n    away_player_1    INTEGER\n        references Player (player_api_id),\n    away_player_2    INTEGER\n        references Player (player_api_id),\n    away_player_3    INTEGER\n        references Player (player_api_id),\n    away_player_4    INTEGER\n        references Player (player_api_id),\n    away_player_5    INTEGER\n        references Player (player_api_id),\n    away_player_6    INTEGER\n        references Player (player_api_id),\n    away_player_7    INTEGER\n        references Player (player_api_id),\n    away_player_8    INTEGER\n        references Player (player_api_id),\n    away_player_9    INTEGER\n        references Player (player_api_id),\n    away_player_10   INTEGER\n        references Player (player_api_id),\n    away_player_11   INTEGER\n        references Player (player_api_id),\n    goal             TEXT -- the goal of the match,\n    shoton           TEXT -- the shot on goal of the match,\n    shotoff          TEXT -- the shot off goal of the match, which is the opposite of shot on,\n    foulcommit       TEXT -- the fouls occurred in the match,\n    card             TEXT -- the cards given in the match,\n    \"cross\"          TEXT -- Balls sent into the opposition team''s area from a wide position in the match,\n    corner           TEXT -- Ball goes out of play for a corner kick in the match,\n    possession       TEXT -- The duration from a player taking over the ball in the match,\n    B365H            REAL,\n    B365D            REAL,\n    B365A            REAL,\n    BWH              REAL,\n    BWD              REAL,\n    BWA              REAL,\n    IWH              REAL,\n    IWD              REAL,\n    IWA              REAL,\n    LBH              REAL,\n    LBD              REAL,\n    LBA              REAL,\n    PSH              REAL,\n    PSD              REAL,\n    PSA              REAL,\n    WHH              REAL,\n    WHD              REAL,\n    WHA              REAL,\n    SJH              REAL,\n    SJD              REAL,\n    SJA              REAL,\n    VCH              REAL,\n    VCD              REAL,\n    VCA              REAL,\n    GBH              REAL,\n    GBD              REAL,\n    GBA              REAL,\n    BSH              REAL,\n    BSD              REAL,\n    BSA              REAL\n)"
    },
    "california_schools": {
      "db_id": "california_schools",
      "tables": {
        "frpm": {
          "name": "frpm",
          "columns": [
            {
              "name": "CDSCode",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "Academic Year",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "County Code",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "District Code",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "School Code",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "County Name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "District Name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "School Name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "District Type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "School Type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Educational Option Type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "NSLP Provision Status",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Charter School (Y/N)",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Charter School Number",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Charter Funding Type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "IRC",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Low Grade",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "High Grade",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Enrollment (K-12)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Free Meal Count (K-12)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Percent (%) Eligible Free (K-12)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "FRPM Count (K-12)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Percent (%) Eligible FRPM (K-12)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Enrollment (Ages 5-17)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Free Meal Count (Ages 5-17)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Percent (%) Eligible Free (Ages 5-17)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "FRPM Count (Ages 5-17)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Percent (%) Eligible FRPM (Ages 5-17)",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "2013-14 CALPADS Fall 1 Certification Status",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "CDSCode"
          ],
          "foreign_keys": [
            {
              "from": "CDSCode",
              "to_table": "schools",
              "to_column": "CDSCode"
            }
          ],
          "ddl": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)",
          "enhanced_ddl": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key -- CDSCode,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)"
        },
        "satscores": {
          "name": "satscores",
          "columns": [
            {
              "name": "cds",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "rtype",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "sname",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "dname",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "cname",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "enroll12",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "NumTstTakr",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "AvgScrRead",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "AvgScrMath",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "AvgScrWrite",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "NumGE1500",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "cds"
          ],
          "foreign_keys": [
            {
              "from": "cds",
              "to_table": "schools",
              "to_column": "CDSCode"
            }
          ],
          "ddl": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)",
          "enhanced_ddl": "CREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key -- California Department Schools,\n    rtype       TEXT  not null -- rtype,\n    sname       TEXT null -- school name,\n    dname       TEXT null -- district segment,\n    cname       TEXT null -- county name,\n    enroll12    INTEGER         not null -- enrollment (1st-12nd grade),\n    NumTstTakr  INTEGER          not null -- Number of Test Takers in this school,\n    AvgScrRead  INTEGER          null -- average scores in Reading,\n    AvgScrMath  INTEGER          null -- average scores in Math,\n    AvgScrWrite INTEGER          null -- average scores in writing,\n    NumGE1500   INTEGER          null -- Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500,\n    --     PctGE1500   double      null,\n    foreign key (cds) references schools (CDSCode)\n)"
        },
        "schools": {
          "name": "schools",
          "columns": [
            {
              "name": "CDSCode",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "NCESDist",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "NCESSchool",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "StatusType",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "County",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "District",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "School",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Street",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "StreetAbr",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "City",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Zip",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "State",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "MailStreet",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "MailStrAbr",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "MailCity",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "MailZip",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "MailState",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Phone",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Ext",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Website",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "OpenDate",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "ClosedDate",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "Charter",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CharterNum",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "FundingType",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "DOC",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "DOCType",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "SOC",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "SOCType",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "EdOpsCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "EdOpsName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "EILCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "EILName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "GSoffered",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "GSserved",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Virtual",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Magnet",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Latitude",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "Longitude",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmFName1",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmLName1",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmEmail1",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmFName2",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmLName2",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmEmail2",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmFName3",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmLName3",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "AdmEmail3",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "LastUpdate",
              "type": "DATE",
              "notnull": true,
              "default": null
            }
          ],
          "primary_keys": [
            "CDSCode"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)",
          "enhanced_ddl": "CREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key -- CDSCode,\n    NCESDist    TEXT  null -- This field represents the 7-digit National Center for Educational Statistics (NCES) school district identification number. The first 2 digits identify the state and the last 5 digits identify the school district. Combined, they make a unique 7-digit ID for each school district.,\n    NCESSchool  TEXT  null -- This field represents the 5-digit NCES school identification number. The NCESSchool combined with the NCESDist form a unique 12-digit ID for each school.,\n    StatusType  TEXT  not null -- This field identifies the status of the district. ,\n    County      TEXT not null -- County name,\n    District    TEXT not null -- District,\n    School      TEXT null -- School,\n    Street      TEXT null -- Street,\n    StreetAbr   TEXT null -- The abbreviated street address of the school, district, or administrative authority’s physical location.,\n    City        TEXT null -- City,\n    Zip         TEXT null -- Zip,\n    State       TEXT  null -- State,\n    MailStreet  TEXT null -- MailStreet,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null -- Phone,\n    Ext         TEXT  null -- The phone number extension of the school, district, or administrative authority.,\n    Website     TEXT null -- The website address of the school, district, or administrative authority.,\n    OpenDate    DATE        null -- The date the school opened.,\n    ClosedDate  DATE        null -- The date the school closed.,\n    Charter     INTEGER    null -- This field identifies a charter school. ,\n    CharterNum  TEXT  null -- The charter school number,,\n    FundingType TEXT null -- Indicates the charter school funding type,\n    DOC         TEXT  not null -- District Ownership Code,\n    DOCType     TEXT not null -- The District Ownership Code Type is the text description of the DOC category.,\n    SOC         TEXT  null -- The School Ownership Code is a numeric code used to identify the type of school.,\n    SOCType     TEXT null -- The School Ownership Code Type is the text description of the type of school.,\n    EdOpsCode   TEXT  null -- The Education Option Code is a short text description of the type of education offered.,\n    EdOpsName   TEXT null -- Educational Option Name,\n    EILCode     TEXT  null -- The Educational Instruction Level Code is a short text description of the institution''s type relative to the grade range served.,\n    EILName     TEXT null -- The Educational Instruction Level Name is the long text description of the institution’s type relative to the grade range served.,\n    GSoffered   TEXT null -- The grade span offered is the lowest grade and the highest grade offered or supported by the school, district, or administrative authority. This field might differ from the grade span served as reported in the most recent certified California Longitudinal Pupil Achievement (CALPADS) Fall 1 data collection.,\n    GSserved    TEXT  null -- It is the lowest grade and the highest grade of student enrollment as reported in the most recent certified CALPADS Fall 1 data collection. Only K–12 enrollment is reported through CALPADS. This field may differ from the grade span offered.,\n    Virtual     TEXT  null -- This field identifies the type of virtual instruction offered by the school. Virtual instruction is instruction in which students and teachers are separated by time and/or location, and interaction occurs via computers and/or telecommunications technologies. ,\n    Magnet      INTEGER   null -- This field identifies whether a school is a magnet school and/or provides a magnet program. ,\n    Latitude    REAL      null -- The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south.,\n    Longitude   REAL      null -- The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east.,\n    AdmFName1   TEXT null -- administrator''s first name,\n    AdmLName1   TEXT null -- administrator''s last name,\n    AdmEmail1   TEXT null -- administrator''s email address,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
        }
      },
      "ddl": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)\n\nCREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key,\n    rtype       TEXT  not null,\n    sname       TEXT null,\n    dname       TEXT null,\n    cname       TEXT null,\n    enroll12    INTEGER         not null,\n    NumTstTakr  INTEGER          not null,\n    AvgScrRead  INTEGER          null,\n    AvgScrMath  INTEGER          null,\n    AvgScrWrite INTEGER          null,\n    NumGE1500   INTEGER          null,\n--     PctGE1500   double      null,\n        foreign key (cds) references schools (CDSCode)\n)\n\nCREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key,\n    NCESDist    TEXT  null,\n    NCESSchool  TEXT  null,\n    StatusType  TEXT  not null,\n    County      TEXT not null,\n    District    TEXT not null,\n    School      TEXT null,\n    Street      TEXT null,\n    StreetAbr   TEXT null,\n    City        TEXT null,\n    Zip         TEXT null,\n    State       TEXT  null,\n    MailStreet  TEXT null,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null,\n    Ext         TEXT  null,\n    Website     TEXT null,\n    OpenDate    DATE        null,\n    ClosedDate  DATE        null,\n    Charter     INTEGER    null,\n    CharterNum  TEXT  null,\n    FundingType TEXT null,\n    DOC         TEXT  not null,\n    DOCType     TEXT not null,\n    SOC         TEXT  null,\n    SOCType     TEXT null,\n    EdOpsCode   TEXT  null,\n    EdOpsName   TEXT null,\n    EILCode     TEXT  null,\n    EILName     TEXT null,\n    GSoffered   TEXT null,\n    GSserved    TEXT  null,\n    Virtual     TEXT  null,\n    Magnet      INTEGER   null,\n    Latitude    REAL      null,\n    Longitude   REAL      null,\n    AdmFName1   TEXT null,\n    AdmLName1   TEXT null,\n    AdmEmail1   TEXT null,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)",
      "enhanced_ddl": "CREATE TABLE frpm\n(\n    CDSCode                                       TEXT not null\n        primary key -- CDSCode,\n    `Academic Year`                               TEXT  null,\n    `County Code`                                 TEXT  null,\n    `District Code`                               INTEGER         null,\n    `School Code`                                 TEXT  null,\n    `County Name`                                 TEXT null,\n    `District Name`                               TEXT null,\n    `School Name`                                 TEXT null,\n    `District Type`                               TEXT null,\n    `School Type`                                 TEXT null,\n    `Educational Option Type`                     TEXT null,\n    `NSLP Provision Status`                       TEXT null,\n    `Charter School (Y/N)`                        INTEGER    null,\n    `Charter School Number`                       TEXT  null,\n    `Charter Funding Type`                        TEXT null,\n    IRC                                           INTEGER    null,\n    `Low Grade`                                   TEXT  null,\n    `High Grade`                                  TEXT null,\n    `Enrollment (K-12)`                           REAL      null,\n    `Free Meal Count (K-12)`                      REAL       null,\n    `Percent (%) Eligible Free (K-12)`            REAL       null,\n    `FRPM Count (K-12)`                           REAL       null,\n    `Percent (%) Eligible FRPM (K-12)`            REAL       null,\n    `Enrollment (Ages 5-17)`                      REAL       null,\n    `Free Meal Count (Ages 5-17)`                 REAL       null,\n    `Percent (%) Eligible Free (Ages 5-17)`       REAL       null,\n    `FRPM Count (Ages 5-17)`                      REAL       null,\n    `Percent (%) Eligible FRPM (Ages 5-17)`       REAL       null,\n    `2013-14 CALPADS Fall 1 Certification Status` INTEGER    null,\n    foreign key (CDSCode) references schools (CDSCode)\n)\n\nCREATE TABLE satscores\n(\n    cds         TEXT not null\n        primary key -- California Department Schools,\n    rtype       TEXT  not null -- rtype,\n    sname       TEXT null -- school name,\n    dname       TEXT null -- district segment,\n    cname       TEXT null -- county name,\n    enroll12    INTEGER         not null -- enrollment (1st-12nd grade),\n    NumTstTakr  INTEGER          not null -- Number of Test Takers in this school,\n    AvgScrRead  INTEGER          null -- average scores in Reading,\n    AvgScrMath  INTEGER          null -- average scores in Math,\n    AvgScrWrite INTEGER          null -- average scores in writing,\n    NumGE1500   INTEGER          null -- Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500,\n    --     PctGE1500   double      null,\n    foreign key (cds) references schools (CDSCode)\n)\n\nCREATE TABLE schools\n(\n    CDSCode     TEXT not null\n        primary key -- CDSCode,\n    NCESDist    TEXT  null -- This field represents the 7-digit National Center for Educational Statistics (NCES) school district identification number. The first 2 digits identify the state and the last 5 digits identify the school district. Combined, they make a unique 7-digit ID for each school district.,\n    NCESSchool  TEXT  null -- This field represents the 5-digit NCES school identification number. The NCESSchool combined with the NCESDist form a unique 12-digit ID for each school.,\n    StatusType  TEXT  not null -- This field identifies the status of the district. ,\n    County      TEXT not null -- County name,\n    District    TEXT not null -- District,\n    School      TEXT null -- School,\n    Street      TEXT null -- Street,\n    StreetAbr   TEXT null -- The abbreviated street address of the school, district, or administrative authority’s physical location.,\n    City        TEXT null -- City,\n    Zip         TEXT null -- Zip,\n    State       TEXT  null -- State,\n    MailStreet  TEXT null -- MailStreet,\n    MailStrAbr  TEXT null,\n    MailCity    TEXT null,\n    MailZip     TEXT null,\n    MailState   TEXT  null,\n    Phone       TEXT null -- Phone,\n    Ext         TEXT  null -- The phone number extension of the school, district, or administrative authority.,\n    Website     TEXT null -- The website address of the school, district, or administrative authority.,\n    OpenDate    DATE        null -- The date the school opened.,\n    ClosedDate  DATE        null -- The date the school closed.,\n    Charter     INTEGER    null -- This field identifies a charter school. ,\n    CharterNum  TEXT  null -- The charter school number,,\n    FundingType TEXT null -- Indicates the charter school funding type,\n    DOC         TEXT  not null -- District Ownership Code,\n    DOCType     TEXT not null -- The District Ownership Code Type is the text description of the DOC category.,\n    SOC         TEXT  null -- The School Ownership Code is a numeric code used to identify the type of school.,\n    SOCType     TEXT null -- The School Ownership Code Type is the text description of the type of school.,\n    EdOpsCode   TEXT  null -- The Education Option Code is a short text description of the type of education offered.,\n    EdOpsName   TEXT null -- Educational Option Name,\n    EILCode     TEXT  null -- The Educational Instruction Level Code is a short text description of the institution''s type relative to the grade range served.,\n    EILName     TEXT null -- The Educational Instruction Level Name is the long text description of the institution’s type relative to the grade range served.,\n    GSoffered   TEXT null -- The grade span offered is the lowest grade and the highest grade offered or supported by the school, district, or administrative authority. This field might differ from the grade span served as reported in the most recent certified California Longitudinal Pupil Achievement (CALPADS) Fall 1 data collection.,\n    GSserved    TEXT  null -- It is the lowest grade and the highest grade of student enrollment as reported in the most recent certified CALPADS Fall 1 data collection. Only K–12 enrollment is reported through CALPADS. This field may differ from the grade span offered.,\n    Virtual     TEXT  null -- This field identifies the type of virtual instruction offered by the school. Virtual instruction is instruction in which students and teachers are separated by time and/or location, and interaction occurs via computers and/or telecommunications technologies. ,\n    Magnet      INTEGER   null -- This field identifies whether a school is a magnet school and/or provides a magnet program. ,\n    Latitude    REAL      null -- The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south.,\n    Longitude   REAL      null -- The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east.,\n    AdmFName1   TEXT null -- administrator''s first name,\n    AdmLName1   TEXT null -- administrator''s last name,\n    AdmEmail1   TEXT null -- administrator''s email address,\n    AdmFName2   TEXT null,\n    AdmLName2   TEXT null,\n    AdmEmail2   TEXT null,\n    AdmFName3   TEXT  null,\n    AdmLName3   TEXT null,\n    AdmEmail3   TEXT null,\n    LastUpdate  DATE        not null\n)"
    },
    "formula_1": {
      "db_id": "formula_1",
      "tables": {
        "circuits": {
          "name": "circuits",
          "columns": [
            {
              "name": "circuitId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "circuitRef",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "location",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "country",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "lat",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "lng",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "alt",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "url",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            }
          ],
          "primary_keys": [
            "circuitId"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE circuits\n(\n    circuitId  INTEGER\n        primary key autoincrement,\n    circuitRef TEXT default '' not null,\n    name       TEXT default '' not null,\n    location   TEXT,\n    country    TEXT,\n    lat        REAL,\n    lng        REAL,\n    alt        INTEGER,\n    url        TEXT default '' not null\n        unique\n)",
          "enhanced_ddl": "CREATE TABLE circuits\n(\n    circuitId  INTEGER\n        primary key autoincrement -- unique identification number of the circuit ,\n    circuitRef TEXT default '' not null -- circuit reference name ,\n    name       TEXT default '' not null,\n    location   TEXT,\n    country    TEXT,\n    lat        REAL,\n    lng        REAL,\n    alt        INTEGER,\n    url        TEXT default '' not null\n        unique\n)"
        },
        "constructors": {
          "name": "constructors",
          "columns": [
            {
              "name": "constructorId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "constructorRef",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "nationality",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "url",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            }
          ],
          "primary_keys": [
            "constructorId"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE constructors\n(\n    constructorId  INTEGER\n        primary key autoincrement,\n    constructorRef TEXT default '' not null,\n    name           TEXT default '' not null\n        unique,\n    nationality    TEXT,\n    url            TEXT default '' not null\n)",
          "enhanced_ddl": "CREATE TABLE constructors\n(\n    constructorId  INTEGER\n        primary key autoincrement,\n    constructorRef TEXT default '' not null,\n    name           TEXT default '' not null\n        unique,\n    nationality    TEXT,\n    url            TEXT default '' not null\n)"
        },
        "drivers": {
          "name": "drivers",
          "columns": [
            {
              "name": "driverId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "driverRef",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "number",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "code",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "forename",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "surname",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "dob",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "nationality",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "url",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            }
          ],
          "primary_keys": [
            "driverId"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE drivers\n(\n    driverId    INTEGER\n        primary key autoincrement,\n    driverRef   TEXT default '' not null,\n    number      INTEGER,\n    code        TEXT,\n    forename    TEXT default '' not null,\n    surname     TEXT default '' not null,\n    dob         DATE,\n    nationality TEXT,\n    url         TEXT default '' not null\n        unique\n)",
          "enhanced_ddl": "CREATE TABLE drivers\n(\n    driverId    INTEGER\n        primary key autoincrement,\n    driverRef   TEXT default '' not null,\n    number      INTEGER,\n    code        TEXT,\n    forename    TEXT default '' not null,\n    surname     TEXT default '' not null,\n    dob         DATE,\n    nationality TEXT,\n    url         TEXT default '' not null\n        unique\n)"
        },
        "seasons": {
          "name": "seasons",
          "columns": [
            {
              "name": "year",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "url",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            }
          ],
          "primary_keys": [
            "year"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE seasons\n(\n    year INTEGER default 0  not null\n        primary key,\n    url  TEXT    default '' not null\n        unique\n)",
          "enhanced_ddl": "CREATE TABLE seasons\n(\n    year INTEGER default 0  not null\n        primary key,\n    url  TEXT    default '' not null\n        unique\n)"
        },
        "races": {
          "name": "races",
          "columns": [
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "year",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "round",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "circuitId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "date",
              "type": "DATE",
              "notnull": true,
              "default": "'0000-00-00'"
            },
            {
              "name": "time",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "url",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "raceId"
          ],
          "foreign_keys": [
            {
              "from": "circuitId",
              "to_table": "circuits",
              "to_column": "circuitId"
            },
            {
              "from": "year",
              "to_table": "seasons",
              "to_column": "year"
            }
          ],
          "ddl": "CREATE TABLE races\n(\n    raceId    INTEGER\n        primary key autoincrement,\n    year      INTEGER default 0            not null,\n    round     INTEGER default 0            not null,\n    circuitId INTEGER default 0            not null,\n    name      TEXT    default ''           not null,\n    date      DATE    default '0000-00-00' not null,\n    time      TEXT,\n    url       TEXT unique,\n    foreign key (year) references seasons(year),\n    foreign key (circuitId) references circuits(circuitId)\n)",
          "enhanced_ddl": "CREATE TABLE races\n(\n    raceId    INTEGER\n        primary key autoincrement,\n    year      INTEGER default 0            not null,\n    round     INTEGER default 0            not null,\n    circuitId INTEGER default 0            not null,\n    name      TEXT    default ''           not null,\n    date      DATE    default '0000-00-00' not null,\n    time      TEXT,\n    url       TEXT unique,\n    foreign key (year) references seasons(year),\n    foreign key (circuitId) references circuits(circuitId)\n)"
        },
        "constructorResults": {
          "name": "constructorResults",
          "columns": [
            {
              "name": "constructorResultsId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "constructorId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "points",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "status",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "constructorResultsId"
          ],
          "foreign_keys": [
            {
              "from": "constructorId",
              "to_table": "constructors",
              "to_column": "constructorId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE constructorResults\n(\n    constructorResultsId INTEGER\n        primary key autoincrement,\n    raceId               INTEGER default 0 not null,\n    constructorId        INTEGER default 0 not null,\n    points               REAL,\n    status               TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n\n)",
          "enhanced_ddl": "CREATE TABLE constructorResults\n(\n    constructorResultsId INTEGER\n        primary key autoincrement -- constructor Results Id,\n    raceId               INTEGER default 0 not null -- race id,\n    constructorId        INTEGER default 0 not null -- constructor id,\n    points               REAL -- points,\n    status               TEXT -- status,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
        },
        "constructorStandings": {
          "name": "constructorStandings",
          "columns": [
            {
              "name": "constructorStandingsId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "constructorId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "points",
              "type": "REAL",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "position",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "positionText",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "wins",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            }
          ],
          "primary_keys": [
            "constructorStandingsId"
          ],
          "foreign_keys": [
            {
              "from": "constructorId",
              "to_table": "constructors",
              "to_column": "constructorId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE constructorStandings\n(\n    constructorStandingsId INTEGER\n        primary key autoincrement,\n    raceId                 INTEGER default 0 not null,\n    constructorId          INTEGER default 0 not null,\n    points                 REAL   default 0 not null,\n    position               INTEGER,\n    positionText           TEXT,\n    wins                   INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)",
          "enhanced_ddl": "CREATE TABLE constructorStandings\n(\n    constructorStandingsId INTEGER\n        primary key autoincrement,\n    raceId                 INTEGER default 0 not null,\n    constructorId          INTEGER default 0 not null,\n    points                 REAL   default 0 not null -- how many points acquired in each race ,\n    position               INTEGER,\n    positionText           TEXT,\n    wins                   INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
        },
        "driverStandings": {
          "name": "driverStandings",
          "columns": [
            {
              "name": "driverStandingsId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "driverId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "points",
              "type": "REAL",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "position",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "positionText",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "wins",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            }
          ],
          "primary_keys": [
            "driverStandingsId"
          ],
          "foreign_keys": [
            {
              "from": "driverId",
              "to_table": "drivers",
              "to_column": "driverId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE driverStandings\n(\n    driverStandingsId INTEGER\n        primary key autoincrement,\n    raceId            INTEGER default 0 not null,\n    driverId          INTEGER default 0 not null,\n    points            REAL   default 0 not null,\n    position          INTEGER,\n    positionText      TEXT,\n    wins              INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)",
          "enhanced_ddl": "CREATE TABLE driverStandings\n(\n    driverStandingsId INTEGER\n        primary key autoincrement,\n    raceId            INTEGER default 0 not null,\n    driverId          INTEGER default 0 not null,\n    points            REAL   default 0 not null,\n    position          INTEGER,\n    positionText      TEXT,\n    wins              INTEGER default 0 not null -- wins ,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
        },
        "lapTimes": {
          "name": "lapTimes",
          "columns": [
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "driverId",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "lap",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "position",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "time",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "milliseconds",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "raceId",
            "driverId",
            "lap"
          ],
          "foreign_keys": [
            {
              "from": "driverId",
              "to_table": "drivers",
              "to_column": "driverId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE lapTimes\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    lap          INTEGER not null,\n    position     INTEGER,\n    time         TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, lap),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)",
          "enhanced_ddl": "CREATE TABLE lapTimes\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    lap          INTEGER not null,\n    position     INTEGER,\n    time         TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, lap),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
        },
        "pitStops": {
          "name": "pitStops",
          "columns": [
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "driverId",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "stop",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "lap",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "time",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "duration",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "milliseconds",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "raceId",
            "driverId",
            "stop"
          ],
          "foreign_keys": [
            {
              "from": "driverId",
              "to_table": "drivers",
              "to_column": "driverId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE pitStops\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    stop         INTEGER not null,\n    lap          INTEGER not null,\n    time         TEXT    not null,\n    duration     TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, stop),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)",
          "enhanced_ddl": "CREATE TABLE pitStops\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    stop         INTEGER not null,\n    lap          INTEGER not null,\n    time         TEXT    not null,\n    duration     TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, stop),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)"
        },
        "qualifying": {
          "name": "qualifying",
          "columns": [
            {
              "name": "qualifyId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "driverId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "constructorId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "number",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "position",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "q1",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "q2",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "q3",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "qualifyId"
          ],
          "foreign_keys": [
            {
              "from": "constructorId",
              "to_table": "constructors",
              "to_column": "constructorId"
            },
            {
              "from": "driverId",
              "to_table": "drivers",
              "to_column": "driverId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE qualifying\n(\n    qualifyId     INTEGER\n        primary key autoincrement,\n    raceId        INTEGER default 0 not null,\n    driverId      INTEGER default 0 not null,\n    constructorId INTEGER default 0 not null,\n    number        INTEGER default 0 not null,\n    position      INTEGER,\n    q1            TEXT,\n    q2            TEXT,\n    q3            TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId)\n)",
          "enhanced_ddl": "CREATE TABLE qualifying\n(\n    qualifyId     INTEGER\n        primary key autoincrement,\n    raceId        INTEGER default 0 not null,\n    driverId      INTEGER default 0 not null,\n    constructorId INTEGER default 0 not null,\n    number        INTEGER default 0 not null,\n    position      INTEGER,\n    q1            TEXT,\n    q2            TEXT,\n    q3            TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId)\n)"
        },
        "status": {
          "name": "status",
          "columns": [
            {
              "name": "statusId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "status",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            }
          ],
          "primary_keys": [
            "statusId"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE status\n(\n    statusId INTEGER\n        primary key autoincrement,\n    status   TEXT default '' not null\n)",
          "enhanced_ddl": "CREATE TABLE status\n(\n    statusId INTEGER\n        primary key autoincrement,\n    status   TEXT default '' not null\n)"
        },
        "results": {
          "name": "results",
          "columns": [
            {
              "name": "resultId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "raceId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "driverId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "constructorId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "number",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "grid",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "position",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "positionText",
              "type": "TEXT",
              "notnull": true,
              "default": "''"
            },
            {
              "name": "positionOrder",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "points",
              "type": "REAL",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "laps",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "time",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "milliseconds",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "fastestLap",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "rank",
              "type": "INTEGER",
              "notnull": false,
              "default": "0"
            },
            {
              "name": "fastestLapTime",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "fastestLapSpeed",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "statusId",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            }
          ],
          "primary_keys": [
            "resultId"
          ],
          "foreign_keys": [
            {
              "from": "statusId",
              "to_table": "status",
              "to_column": "statusId"
            },
            {
              "from": "constructorId",
              "to_table": "constructors",
              "to_column": "constructorId"
            },
            {
              "from": "driverId",
              "to_table": "drivers",
              "to_column": "driverId"
            },
            {
              "from": "raceId",
              "to_table": "races",
              "to_column": "raceId"
            }
          ],
          "ddl": "CREATE TABLE results\n(\n    resultId        INTEGER\n        primary key autoincrement,\n    raceId          INTEGER default 0  not null,\n    driverId        INTEGER default 0  not null,\n    constructorId   INTEGER default 0  not null,\n    number          INTEGER,\n    grid            INTEGER default 0  not null,\n    position        INTEGER,\n    positionText    TEXT    default '' not null,\n    positionOrder   INTEGER default 0  not null,\n    points          REAL   default 0  not null,\n    laps            INTEGER default 0  not null,\n    time            TEXT,\n    milliseconds    INTEGER,\n    fastestLap      INTEGER,\n    rank            INTEGER default 0,\n    fastestLapTime  TEXT,\n    fastestLapSpeed TEXT,\n    statusId        INTEGER default 0  not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId),\n    foreign key (statusId) references status(statusId)\n)",
          "enhanced_ddl": "CREATE TABLE results\n(\n    resultId        INTEGER\n        primary key autoincrement -- the unique identification number identifying race result ,\n    raceId          INTEGER default 0  not null -- the identification number identifying the race ,\n    driverId        INTEGER default 0  not null,\n    constructorId   INTEGER default 0  not null,\n    number          INTEGER,\n    grid            INTEGER default 0  not null,\n    position        INTEGER,\n    positionText    TEXT    default '' not null,\n    positionOrder   INTEGER default 0  not null,\n    points          REAL   default 0  not null,\n    laps            INTEGER default 0  not null,\n    time            TEXT,\n    milliseconds    INTEGER,\n    fastestLap      INTEGER,\n    rank            INTEGER default 0,\n    fastestLapTime  TEXT,\n    fastestLapSpeed TEXT,\n    statusId        INTEGER default 0  not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId),\n    foreign key (statusId) references status(statusId)\n)"
        }
      },
      "ddl": "CREATE TABLE circuits\n(\n    circuitId  INTEGER\n        primary key autoincrement,\n    circuitRef TEXT default '' not null,\n    name       TEXT default '' not null,\n    location   TEXT,\n    country    TEXT,\n    lat        REAL,\n    lng        REAL,\n    alt        INTEGER,\n    url        TEXT default '' not null\n        unique\n)\n\nCREATE TABLE constructors\n(\n    constructorId  INTEGER\n        primary key autoincrement,\n    constructorRef TEXT default '' not null,\n    name           TEXT default '' not null\n        unique,\n    nationality    TEXT,\n    url            TEXT default '' not null\n)\n\nCREATE TABLE drivers\n(\n    driverId    INTEGER\n        primary key autoincrement,\n    driverRef   TEXT default '' not null,\n    number      INTEGER,\n    code        TEXT,\n    forename    TEXT default '' not null,\n    surname     TEXT default '' not null,\n    dob         DATE,\n    nationality TEXT,\n    url         TEXT default '' not null\n        unique\n)\n\nCREATE TABLE seasons\n(\n    year INTEGER default 0  not null\n        primary key,\n    url  TEXT    default '' not null\n        unique\n)\n\nCREATE TABLE races\n(\n    raceId    INTEGER\n        primary key autoincrement,\n    year      INTEGER default 0            not null,\n    round     INTEGER default 0            not null,\n    circuitId INTEGER default 0            not null,\n    name      TEXT    default ''           not null,\n    date      DATE    default '0000-00-00' not null,\n    time      TEXT,\n    url       TEXT unique,\n    foreign key (year) references seasons(year),\n    foreign key (circuitId) references circuits(circuitId)\n)\n\nCREATE TABLE constructorResults\n(\n    constructorResultsId INTEGER\n        primary key autoincrement,\n    raceId               INTEGER default 0 not null,\n    constructorId        INTEGER default 0 not null,\n    points               REAL,\n    status               TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n\n)\n\nCREATE TABLE constructorStandings\n(\n    constructorStandingsId INTEGER\n        primary key autoincrement,\n    raceId                 INTEGER default 0 not null,\n    constructorId          INTEGER default 0 not null,\n    points                 REAL   default 0 not null,\n    position               INTEGER,\n    positionText           TEXT,\n    wins                   INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)\n\nCREATE TABLE driverStandings\n(\n    driverStandingsId INTEGER\n        primary key autoincrement,\n    raceId            INTEGER default 0 not null,\n    driverId          INTEGER default 0 not null,\n    points            REAL   default 0 not null,\n    position          INTEGER,\n    positionText      TEXT,\n    wins              INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)\n\nCREATE TABLE lapTimes\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    lap          INTEGER not null,\n    position     INTEGER,\n    time         TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, lap),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)\n\nCREATE TABLE pitStops\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    stop         INTEGER not null,\n    lap          INTEGER not null,\n    time         TEXT    not null,\n    duration     TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, stop),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)\n\nCREATE TABLE qualifying\n(\n    qualifyId     INTEGER\n        primary key autoincrement,\n    raceId        INTEGER default 0 not null,\n    driverId      INTEGER default 0 not null,\n    constructorId INTEGER default 0 not null,\n    number        INTEGER default 0 not null,\n    position      INTEGER,\n    q1            TEXT,\n    q2            TEXT,\n    q3            TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId)\n)\n\nCREATE TABLE status\n(\n    statusId INTEGER\n        primary key autoincrement,\n    status   TEXT default '' not null\n)\n\nCREATE TABLE results\n(\n    resultId        INTEGER\n        primary key autoincrement,\n    raceId          INTEGER default 0  not null,\n    driverId        INTEGER default 0  not null,\n    constructorId   INTEGER default 0  not null,\n    number          INTEGER,\n    grid            INTEGER default 0  not null,\n    position        INTEGER,\n    positionText    TEXT    default '' not null,\n    positionOrder   INTEGER default 0  not null,\n    points          REAL   default 0  not null,\n    laps            INTEGER default 0  not null,\n    time            TEXT,\n    milliseconds    INTEGER,\n    fastestLap      INTEGER,\n    rank            INTEGER default 0,\n    fastestLapTime  TEXT,\n    fastestLapSpeed TEXT,\n    statusId        INTEGER default 0  not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId),\n    foreign key (statusId) references status(statusId)\n)",
      "enhanced_ddl": "CREATE TABLE circuits\n(\n    circuitId  INTEGER\n        primary key autoincrement -- unique identification number of the circuit ,\n    circuitRef TEXT default '' not null -- circuit reference name ,\n    name       TEXT default '' not null,\n    location   TEXT,\n    country    TEXT,\n    lat        REAL,\n    lng        REAL,\n    alt        INTEGER,\n    url        TEXT default '' not null\n        unique\n)\n\nCREATE TABLE constructors\n(\n    constructorId  INTEGER\n        primary key autoincrement,\n    constructorRef TEXT default '' not null,\n    name           TEXT default '' not null\n        unique,\n    nationality    TEXT,\n    url            TEXT default '' not null\n)\n\nCREATE TABLE drivers\n(\n    driverId    INTEGER\n        primary key autoincrement,\n    driverRef   TEXT default '' not null,\n    number      INTEGER,\n    code        TEXT,\n    forename    TEXT default '' not null,\n    surname     TEXT default '' not null,\n    dob         DATE,\n    nationality TEXT,\n    url         TEXT default '' not null\n        unique\n)\n\nCREATE TABLE seasons\n(\n    year INTEGER default 0  not null\n        primary key,\n    url  TEXT    default '' not null\n        unique\n)\n\nCREATE TABLE races\n(\n    raceId    INTEGER\n        primary key autoincrement,\n    year      INTEGER default 0            not null,\n    round     INTEGER default 0            not null,\n    circuitId INTEGER default 0            not null,\n    name      TEXT    default ''           not null,\n    date      DATE    default '0000-00-00' not null,\n    time      TEXT,\n    url       TEXT unique,\n    foreign key (year) references seasons(year),\n    foreign key (circuitId) references circuits(circuitId)\n)\n\nCREATE TABLE constructorResults\n(\n    constructorResultsId INTEGER\n        primary key autoincrement -- constructor Results Id,\n    raceId               INTEGER default 0 not null -- race id,\n    constructorId        INTEGER default 0 not null -- constructor id,\n    points               REAL -- points,\n    status               TEXT -- status,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)\n\nCREATE TABLE constructorStandings\n(\n    constructorStandingsId INTEGER\n        primary key autoincrement,\n    raceId                 INTEGER default 0 not null,\n    constructorId          INTEGER default 0 not null,\n    points                 REAL   default 0 not null -- how many points acquired in each race ,\n    position               INTEGER,\n    positionText           TEXT,\n    wins                   INTEGER default 0 not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (constructorId) references constructors(constructorId)\n)\n\nCREATE TABLE driverStandings\n(\n    driverStandingsId INTEGER\n        primary key autoincrement,\n    raceId            INTEGER default 0 not null,\n    driverId          INTEGER default 0 not null,\n    points            REAL   default 0 not null,\n    position          INTEGER,\n    positionText      TEXT,\n    wins              INTEGER default 0 not null -- wins ,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)\n\nCREATE TABLE lapTimes\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    lap          INTEGER not null,\n    position     INTEGER,\n    time         TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, lap),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)\n\nCREATE TABLE pitStops\n(\n    raceId       INTEGER not null,\n    driverId     INTEGER not null,\n    stop         INTEGER not null,\n    lap          INTEGER not null,\n    time         TEXT    not null,\n    duration     TEXT,\n    milliseconds INTEGER,\n    primary key (raceId, driverId, stop),\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId)\n)\n\nCREATE TABLE qualifying\n(\n    qualifyId     INTEGER\n        primary key autoincrement,\n    raceId        INTEGER default 0 not null,\n    driverId      INTEGER default 0 not null,\n    constructorId INTEGER default 0 not null,\n    number        INTEGER default 0 not null,\n    position      INTEGER,\n    q1            TEXT,\n    q2            TEXT,\n    q3            TEXT,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId)\n)\n\nCREATE TABLE status\n(\n    statusId INTEGER\n        primary key autoincrement,\n    status   TEXT default '' not null\n)\n\nCREATE TABLE results\n(\n    resultId        INTEGER\n        primary key autoincrement -- the unique identification number identifying race result ,\n    raceId          INTEGER default 0  not null -- the identification number identifying the race ,\n    driverId        INTEGER default 0  not null,\n    constructorId   INTEGER default 0  not null,\n    number          INTEGER,\n    grid            INTEGER default 0  not null,\n    position        INTEGER,\n    positionText    TEXT    default '' not null,\n    positionOrder   INTEGER default 0  not null,\n    points          REAL   default 0  not null,\n    laps            INTEGER default 0  not null,\n    time            TEXT,\n    milliseconds    INTEGER,\n    fastestLap      INTEGER,\n    rank            INTEGER default 0,\n    fastestLapTime  TEXT,\n    fastestLapSpeed TEXT,\n    statusId        INTEGER default 0  not null,\n    foreign key (raceId) references races(raceId),\n    foreign key (driverId) references drivers(driverId),\n    foreign key (constructorId) references constructors(constructorId),\n    foreign key (statusId) references status(statusId)\n)"
    },
    "student_club": {
      "db_id": "student_club",
      "tables": {
        "event": {
          "name": "event",
          "columns": [
            {
              "name": "event_id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "event_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "event_date",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "notes",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "location",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "status",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "event_id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)",
          "enhanced_ddl": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key -- A unique identifier for the event,\n    event_name TEXT -- event name,\n    event_date TEXT -- The date the event took place or is scheduled to take place,\n    type       TEXT -- The kind of event, such as game, social, election,\n    notes      TEXT -- A free text field for any notes about the event,\n    location   TEXT -- Address where the event was held or is to be held or the name of such a location,\n    status     TEXT -- One of three values indicating if the event is in planning, is opened, or is closed\n)"
        },
        "major": {
          "name": "major",
          "columns": [
            {
              "name": "major_id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "major_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "department",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "college",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "major_id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)",
          "enhanced_ddl": "CREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key -- A unique identifier for each major,\n    major_name TEXT -- major name,\n    department TEXT -- The name of the department that offers the major,\n    college    TEXT -- The name college that houses the department that offers the major\n)"
        },
        "zip_code": {
          "name": "zip_code",
          "columns": [
            {
              "name": "zip_code",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "city",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "county",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "state",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "short_state",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "zip_code"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)",
          "enhanced_ddl": "CREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key -- The ZIP code itself. A five-digit number identifying a US post office.,\n    type        TEXT -- The kind of ZIP code,\n    city        TEXT -- The city to which the ZIP pertains,\n    county      TEXT -- The county to which the ZIP pertains,\n    state       TEXT -- The name of the state to which the ZIP pertains,\n    short_state TEXT -- The abbreviation of the state to which the ZIP pertains\n)"
        },
        "attendance": {
          "name": "attendance",
          "columns": [
            {
              "name": "link_to_event",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "link_to_member",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "link_to_event",
            "link_to_member"
          ],
          "foreign_keys": [
            {
              "from": "link_to_member",
              "to_table": "member",
              "to_column": "member_id"
            },
            {
              "from": "link_to_event",
              "to_table": "event",
              "to_column": "event_id"
            }
          ],
          "ddl": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)",
          "enhanced_ddl": "CREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT -- The unique identifier of the event which was attended,\n    link_to_member TEXT -- The unique identifier of the member who attended the event,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)"
        },
        "budget": {
          "name": "budget",
          "columns": [
            {
              "name": "budget_id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "category",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "spent",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "remaining",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "amount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "event_status",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "link_to_event",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "budget_id"
          ],
          "foreign_keys": [
            {
              "from": "link_to_event",
              "to_table": "event",
              "to_column": "event_id"
            }
          ],
          "ddl": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)",
          "enhanced_ddl": "CREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key -- A unique identifier for the budget entry,\n    category      TEXT -- The area for which the amount is budgeted, such as, advertisement, food, parking,\n    spent         REAL -- The total amount spent in the budgeted category for an event.,\n    remaining     REAL -- A value calculated as the amount budgeted minus the amount spent,\n    amount        INTEGER -- The amount budgeted for the specified category and event,\n    event_status  TEXT -- the status of the event,\n    link_to_event TEXT -- The unique identifier of the event to which the budget line applies.,\n    foreign key (link_to_event) references event(event_id)\n)"
        },
        "expense": {
          "name": "expense",
          "columns": [
            {
              "name": "expense_id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "expense_description",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "expense_date",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "cost",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "approved",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "link_to_member",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "link_to_budget",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "expense_id"
          ],
          "foreign_keys": [
            {
              "from": "link_to_member",
              "to_table": "member",
              "to_column": "member_id"
            },
            {
              "from": "link_to_budget",
              "to_table": "budget",
              "to_column": "budget_id"
            }
          ],
          "ddl": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)",
          "enhanced_ddl": "CREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key -- unique id of income,\n    expense_description TEXT -- A textual description of what the money was spend for,\n    expense_date        TEXT -- The date the expense was incurred,\n    cost                REAL -- The dollar amount of the expense,\n    approved            TEXT -- A true or false value indicating if the expense was approved,\n    link_to_member      TEXT -- The member who incurred the expense,\n    link_to_budget      TEXT -- The unique identifier of the record in the Budget table that indicates the expected total expenditure for a given category and event. ,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)"
        },
        "income": {
          "name": "income",
          "columns": [
            {
              "name": "income_id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "date_received",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "amount",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "source",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "notes",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "link_to_member",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "income_id"
          ],
          "foreign_keys": [
            {
              "from": "link_to_member",
              "to_table": "member",
              "to_column": "member_id"
            }
          ],
          "ddl": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)",
          "enhanced_ddl": "CREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key -- A unique identifier for each record of income,\n    date_received  TEXT -- the date that the fund received,\n    amount         INTEGER -- amount of funds,\n    source         TEXT -- A value indicating where the funds come from such as dues, or the annual university allocation,\n    notes          TEXT -- A free-text value giving any needed details about the receipt of funds,\n    link_to_member TEXT -- link to member,\n    foreign key (link_to_member) references member(member_id)\n)"
        },
        "member": {
          "name": "member",
          "columns": [
            {
              "name": "member_id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "first_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "last_name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "email",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "position",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "t_shirt_size",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "phone",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "zip",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "link_to_major",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "member_id"
          ],
          "foreign_keys": [
            {
              "from": "zip",
              "to_table": "zip_code",
              "to_column": "zip_code"
            },
            {
              "from": "link_to_major",
              "to_table": "major",
              "to_column": "major_id"
            }
          ],
          "ddl": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)",
          "enhanced_ddl": "CREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key -- unique id of member,\n    first_name    TEXT -- member''s first name,\n    last_name     TEXT -- member''s last name,\n    email         TEXT -- member''s email,\n    position      TEXT -- The position the member holds in the club,\n    t_shirt_size  TEXT -- The size of tee shirt that member wants when shirts are ordered,\n    phone         TEXT -- The best telephone at which to contact the member,\n    zip           INTEGER -- the zip code of the member''s hometown,\n    link_to_major TEXT -- The unique identifier of the major of the member. References the Major table,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
        }
      },
      "ddl": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key,\n    event_name TEXT,\n    event_date TEXT,\n    type       TEXT,\n    notes      TEXT,\n    location   TEXT,\n    status     TEXT\n)\n\nCREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key,\n    major_name TEXT,\n    department TEXT,\n    college    TEXT\n)\n\nCREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key,\n    type        TEXT,\n    city        TEXT,\n    county      TEXT,\n    state       TEXT,\n    short_state TEXT\n)\n\nCREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT,\n    link_to_member TEXT,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)\n\nCREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key,\n    category      TEXT,\n    spent         REAL,\n    remaining     REAL,\n    amount        INTEGER,\n    event_status  TEXT,\n    link_to_event TEXT,\n    foreign key (link_to_event) references event(event_id)\n)\n\nCREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key,\n    expense_description TEXT,\n    expense_date        TEXT,\n    cost                REAL,\n    approved            TEXT,\n    link_to_member      TEXT,\n    link_to_budget      TEXT,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)\n\nCREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key,\n    date_received  TEXT,\n    amount         INTEGER,\n    source         TEXT,\n    notes          TEXT,\n    link_to_member TEXT,\n    foreign key (link_to_member) references member(member_id)\n)\n\nCREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key,\n    first_name    TEXT,\n    last_name     TEXT,\n    email         TEXT,\n    position      TEXT,\n    t_shirt_size  TEXT,\n    phone         TEXT,\n    zip           INTEGER,\n    link_to_major TEXT,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)",
      "enhanced_ddl": "CREATE TABLE event\n(\n    event_id   TEXT\n        constraint event_pk\n            primary key -- A unique identifier for the event,\n    event_name TEXT -- event name,\n    event_date TEXT -- The date the event took place or is scheduled to take place,\n    type       TEXT -- The kind of event, such as game, social, election,\n    notes      TEXT -- A free text field for any notes about the event,\n    location   TEXT -- Address where the event was held or is to be held or the name of such a location,\n    status     TEXT -- One of three values indicating if the event is in planning, is opened, or is closed\n)\n\nCREATE TABLE major\n(\n    major_id   TEXT\n        constraint major_pk\n            primary key -- A unique identifier for each major,\n    major_name TEXT -- major name,\n    department TEXT -- The name of the department that offers the major,\n    college    TEXT -- The name college that houses the department that offers the major\n)\n\nCREATE TABLE zip_code\n(\n    zip_code    INTEGER\n        constraint zip_code_pk\n            primary key -- The ZIP code itself. A five-digit number identifying a US post office.,\n    type        TEXT -- The kind of ZIP code,\n    city        TEXT -- The city to which the ZIP pertains,\n    county      TEXT -- The county to which the ZIP pertains,\n    state       TEXT -- The name of the state to which the ZIP pertains,\n    short_state TEXT -- The abbreviation of the state to which the ZIP pertains\n)\n\nCREATE TABLE \"attendance\"\n(\n    link_to_event  TEXT -- The unique identifier of the event which was attended,\n    link_to_member TEXT -- The unique identifier of the member who attended the event,\n    primary key (link_to_event, link_to_member),\n    foreign key (link_to_event) references event(event_id),\n    foreign key (link_to_member) references member(member_id)\n)\n\nCREATE TABLE \"budget\"\n(\n    budget_id     TEXT\n            primary key -- A unique identifier for the budget entry,\n    category      TEXT -- The area for which the amount is budgeted, such as, advertisement, food, parking,\n    spent         REAL -- The total amount spent in the budgeted category for an event.,\n    remaining     REAL -- A value calculated as the amount budgeted minus the amount spent,\n    amount        INTEGER -- The amount budgeted for the specified category and event,\n    event_status  TEXT -- the status of the event,\n    link_to_event TEXT -- The unique identifier of the event to which the budget line applies.,\n    foreign key (link_to_event) references event(event_id)\n)\n\nCREATE TABLE \"expense\"\n(\n    expense_id          TEXT\n            primary key -- unique id of income,\n    expense_description TEXT -- A textual description of what the money was spend for,\n    expense_date        TEXT -- The date the expense was incurred,\n    cost                REAL -- The dollar amount of the expense,\n    approved            TEXT -- A true or false value indicating if the expense was approved,\n    link_to_member      TEXT -- The member who incurred the expense,\n    link_to_budget      TEXT -- The unique identifier of the record in the Budget table that indicates the expected total expenditure for a given category and event. ,\n    foreign key (link_to_budget) references budget(budget_id),\n    foreign key (link_to_member) references member(member_id)\n)\n\nCREATE TABLE \"income\"\n(\n    income_id      TEXT\n        constraint income_pk\n            primary key -- A unique identifier for each record of income,\n    date_received  TEXT -- the date that the fund received,\n    amount         INTEGER -- amount of funds,\n    source         TEXT -- A value indicating where the funds come from such as dues, or the annual university allocation,\n    notes          TEXT -- A free-text value giving any needed details about the receipt of funds,\n    link_to_member TEXT -- link to member,\n    foreign key (link_to_member) references member(member_id)\n)\n\nCREATE TABLE \"member\"\n(\n    member_id     TEXT\n        constraint member_pk\n            primary key -- unique id of member,\n    first_name    TEXT -- member''s first name,\n    last_name     TEXT -- member''s last name,\n    email         TEXT -- member''s email,\n    position      TEXT -- The position the member holds in the club,\n    t_shirt_size  TEXT -- The size of tee shirt that member wants when shirts are ordered,\n    phone         TEXT -- The best telephone at which to contact the member,\n    zip           INTEGER -- the zip code of the member''s hometown,\n    link_to_major TEXT -- The unique identifier of the major of the member. References the Major table,\n    foreign key (link_to_major) references major(major_id),\n    foreign key (zip) references zip_code(zip_code)\n)"
    },
    "card_games": {
      "db_id": "card_games",
      "tables": {
        "cards": {
          "name": "cards",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "artist",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "asciiName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "availability",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "borderColor",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "cardKingdomFoilId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "cardKingdomId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "colorIdentity",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "colorIndicator",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "colors",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "convertedManaCost",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "duelDeck",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "edhrecRank",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "faceConvertedManaCost",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "faceName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "flavorName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "flavorText",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "frameEffects",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "frameVersion",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "hand",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "hasAlternativeDeckLimit",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "hasContentWarning",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "hasFoil",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "hasNonFoil",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isAlternative",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isFullArt",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isOnlineOnly",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isOversized",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isPromo",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isReprint",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isReserved",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isStarter",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isStorySpotlight",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isTextless",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isTimeshifted",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "keywords",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "layout",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "leadershipSkills",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "life",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "loyalty",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "manaCost",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mcmId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mcmMetaId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mtgArenaId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mtgjsonV4Id",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mtgoFoilId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mtgoId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "multiverseId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "number",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "originalReleaseDate",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "originalText",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "originalType",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "otherFaceIds",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "power",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "printings",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "promoTypes",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "purchaseUrls",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "rarity",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "scryfallId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "scryfallIllustrationId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "scryfallOracleId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "setCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "side",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "subtypes",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "supertypes",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "tcgplayerProductId",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "text",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "toughness",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "types",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "uuid",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "variations",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "watermark",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)",
          "enhanced_ddl": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT -- The name of the artist that illustrated the card art.,\n    asciiName               TEXT -- The ASCII(opens new window) (Basic/128) code formatted card name with no special unicode characters.,\n    availability            TEXT -- A list of the card''s available printing types.,\n    borderColor             TEXT -- The color of the card border.,\n    cardKingdomFoilId       TEXT -- card Kingdom Foil Id,\n    cardKingdomId           TEXT -- card Kingdom Id,\n    colorIdentity           TEXT -- A list of all the colors found in manaCost, colorIndicator, and text,\n    colorIndicator          TEXT -- A list of all the colors in the color indicator (The symbol prefixed to a card''s types).,\n    colors                  TEXT -- A list of all the colors in manaCost and colorIndicator. ,\n    convertedManaCost       REAL -- The converted mana cost of the card. Use the manaValue property.,\n    duelDeck                TEXT -- The indicator for which duel deck the card is in.,\n    edhrecRank              INTEGER -- The card rank on EDHRec,\n    faceConvertedManaCost   REAL -- The converted mana cost or mana value for the face for either half or part of the card. ,\n    faceName                TEXT -- The name on the face of the card.,\n    flavorName              TEXT -- The promotional card name printed above the true card name on special cards that has no game function.,\n    flavorText              TEXT -- The italicized text found below the rules text that has no game function.,\n    frameEffects            TEXT -- The visual frame effects.,\n    frameVersion            TEXT -- The version of the card frame style.,\n    hand                    TEXT -- The starting maximum hand size total modifier. ,\n    hasAlternativeDeckLimit INTEGER default 0 not null -- If the card allows a value other than 4 copies in a deck.,\n    hasContentWarning       INTEGER default 0 not null -- If the card marked by Wizards of the Coast (opens new window) for having sensitive content. See this official article (opens new window) for more information.,\n    hasFoil                 INTEGER default 0 not null -- If the card can be found in foil,\n    hasNonFoil              INTEGER default 0 not null -- If the card can be found in non-foil,\n    isAlternative           INTEGER default 0 not null -- If the card is an alternate variation to an original printing,\n    isFullArt               INTEGER default 0 not null -- If the card has full artwork.,\n    isOnlineOnly            INTEGER default 0 not null -- If the card is only available in online game variations.,\n    isOversized             INTEGER default 0 not null -- If the card is oversized.,\n    isPromo                 INTEGER default 0 not null -- If the card is a promotional printing.,\n    isReprint               INTEGER default 0 not null -- If the card has been reprinted.,\n    isReserved              INTEGER default 0 not null -- If the card is on the Magic: The Gathering Reserved List (opens new window),\n    isStarter               INTEGER default 0 not null -- If the card is found in a starter deck such as Planeswalker/Brawl decks.,\n    isStorySpotlight        INTEGER default 0 not null -- If the card is a Story Spotlight card.,\n    isTextless              INTEGER default 0 not null -- If the card does not have a text box.,\n    isTimeshifted           INTEGER default 0 not null -- If the card is time shifted,\n    keywords                TEXT -- A list of keywords found on the card.,\n    layout                  TEXT -- The type of card layout. For a token card, this will be \"\"token\"\",\n    leadershipSkills        TEXT -- A list of formats the card is legal to be a commander in,\n    life                    TEXT -- The starting life total modifier. A plus or minus character precedes an integer.,\n    loyalty                 TEXT -- The starting loyalty value of the card.,\n    manaCost                TEXT -- The mana cost of the card wrapped in brackets for each value.,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT -- The name of the card.,\n    number                  TEXT -- The number of the card,\n    originalReleaseDate     TEXT -- original Release Date,\n    originalText            TEXT -- original Text,\n    originalType            TEXT -- original Type,\n    otherFaceIds            TEXT -- other Face Ids,\n    power                   TEXT -- The power of the card.,\n    printings               TEXT -- A list of set printing codes the card was printed in, formatted in uppercase.,\n    promoTypes              TEXT -- A list of promotional types for a card.,\n    purchaseUrls            TEXT -- Links that navigate to websites where the card can be purchased.,\n    rarity                  TEXT -- The card printing rarity.,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT -- The set printing code that the card is from.,\n    side                    TEXT -- The identifier of the card side. ,\n    subtypes                TEXT -- A list of card subtypes found after em-dash.,\n    supertypes              TEXT -- A list of card supertypes found before em-dash.,\n    tcgplayerProductId      TEXT,\n    text                    TEXT -- The rules text of the card.,\n    toughness               TEXT -- The toughness of the card.,\n    type                    TEXT -- The type of the card as visible, including any supertypes and subtypes.,\n    types                   TEXT -- A list of all card types of the card, including Un‑sets and gameplay variants.,\n    uuid                    TEXT              not null\n        unique -- The universal unique identifier (v5) generated by MTGJSON. Each entry is unique.,\n    variations              TEXT,\n    watermark               TEXT -- The name of the watermark on the card.\n)"
        },
        "foreign_data": {
          "name": "foreign_data",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "flavorText",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "language",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "multiverseid",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "text",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "uuid",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "uuid",
              "to_table": "cards",
              "to_column": "uuid"
            }
          ],
          "ddl": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)",
          "enhanced_ddl": "CREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement -- unique id number identifying this row of data,\n    flavorText   TEXT -- The foreign flavor text of the card.,\n    language     TEXT -- The foreign language of card.,\n    multiverseid INTEGER -- The foreign multiverse identifier of the card.,\n    name         TEXT -- The foreign name of the card.,\n    text         TEXT -- The foreign text ruling of the card.,\n    type         TEXT -- The foreign type of the card. Includes any supertypes and subtypes.,\n    uuid         TEXT\n        references cards (uuid)\n)"
        },
        "legalities": {
          "name": "legalities",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "format",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "status",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "uuid",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "uuid",
              "to_table": "cards",
              "to_column": "uuid"
            }
          ],
          "ddl": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement -- unique id identifying this legality,\n    format TEXT -- format of play,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
        },
        "sets": {
          "name": "sets",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "baseSetSize",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "block",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "booster",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "code",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "isFoilOnly",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isForeignOnly",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isNonFoilOnly",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isOnlineOnly",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "isPartialPreview",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "keyruneCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mcmId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "mcmIdExtras",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "mcmName",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "mtgoCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "name",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "parentCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "releaseDate",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "tcgplayerGroupId",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "totalSetSize",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "type",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)",
          "enhanced_ddl": "CREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement -- unique id identifying this set,\n    baseSetSize      INTEGER -- The number of cards in the set.,\n    block            TEXT -- The block name the set was in.,\n    booster          TEXT -- A breakdown of possibilities and weights of cards in a booster pack.,\n    code             TEXT              not null\n        unique -- The set code for the set.,\n    isFoilOnly       INTEGER default 0 not null -- If the set is only available in foil.,\n    isForeignOnly    INTEGER default 0 not null -- If the set is available only outside the United States of America.,\n    isNonFoilOnly    INTEGER default 0 not null -- If the set is only available in non-foil.,\n    isOnlineOnly     INTEGER default 0 not null -- If the set is only available in online game variations.,\n    isPartialPreview INTEGER default 0 not null -- If the set is still in preview (spoiled). Preview sets do not have complete data.,\n    keyruneCode      TEXT -- The matching Keyrune code for set image icons.,\n    mcmId            INTEGER -- The Magic Card Marketset identifier.,\n    mcmIdExtras      INTEGER -- The split Magic Card Market set identifier if a set is printed in two sets. This identifier represents the second set''s identifier.,\n    mcmName          TEXT,\n    mtgoCode         TEXT -- The set code for the set as it appears on Magic: The Gathering Online,\n    name             TEXT -- The name of the set.,\n    parentCode       TEXT -- The parent set code for set variations like promotions, guild kits, etc.,\n    releaseDate      DATE -- The release date in ISO 8601 format for the set.,\n    tcgplayerGroupId INTEGER -- The group identifier of the set on TCGplayer,\n    totalSetSize     INTEGER -- The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications - however those cards are included in the set itself.,\n    type             TEXT -- The expansion type of the set.\n)"
        },
        "set_translations": {
          "name": "set_translations",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "language",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "setCode",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "translation",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "setCode",
              "to_table": "sets",
              "to_column": "code"
            }
          ],
          "ddl": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)",
          "enhanced_ddl": "CREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement -- unique id identifying this set,\n    language    TEXT -- language of this card set,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade -- the set code for this set,\n    translation TEXT -- translation of this card set\n)"
        },
        "rulings": {
          "name": "rulings",
          "columns": [
            {
              "name": "id",
              "type": "INTEGER",
              "notnull": true,
              "default": null
            },
            {
              "name": "date",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "text",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "uuid",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "id"
          ],
          "foreign_keys": [
            {
              "from": "uuid",
              "to_table": "cards",
              "to_column": "uuid"
            }
          ],
          "ddl": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement -- unique id identifying this ruling,\n    date DATE -- date ,\n    text TEXT -- description about this ruling,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
        }
      },
      "ddl": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT,\n    asciiName               TEXT,\n    availability            TEXT,\n    borderColor             TEXT,\n    cardKingdomFoilId       TEXT,\n    cardKingdomId           TEXT,\n    colorIdentity           TEXT,\n    colorIndicator          TEXT,\n    colors                  TEXT,\n    convertedManaCost       REAL,\n    duelDeck                TEXT,\n    edhrecRank              INTEGER,\n    faceConvertedManaCost   REAL,\n    faceName                TEXT,\n    flavorName              TEXT,\n    flavorText              TEXT,\n    frameEffects            TEXT,\n    frameVersion            TEXT,\n    hand                    TEXT,\n    hasAlternativeDeckLimit INTEGER default 0 not null,\n    hasContentWarning       INTEGER default 0 not null,\n    hasFoil                 INTEGER default 0 not null,\n    hasNonFoil              INTEGER default 0 not null,\n    isAlternative           INTEGER default 0 not null,\n    isFullArt               INTEGER default 0 not null,\n    isOnlineOnly            INTEGER default 0 not null,\n    isOversized             INTEGER default 0 not null,\n    isPromo                 INTEGER default 0 not null,\n    isReprint               INTEGER default 0 not null,\n    isReserved              INTEGER default 0 not null,\n    isStarter               INTEGER default 0 not null,\n    isStorySpotlight        INTEGER default 0 not null,\n    isTextless              INTEGER default 0 not null,\n    isTimeshifted           INTEGER default 0 not null,\n    keywords                TEXT,\n    layout                  TEXT,\n    leadershipSkills        TEXT,\n    life                    TEXT,\n    loyalty                 TEXT,\n    manaCost                TEXT,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT,\n    number                  TEXT,\n    originalReleaseDate     TEXT,\n    originalText            TEXT,\n    originalType            TEXT,\n    otherFaceIds            TEXT,\n    power                   TEXT,\n    printings               TEXT,\n    promoTypes              TEXT,\n    purchaseUrls            TEXT,\n    rarity                  TEXT,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT,\n    side                    TEXT,\n    subtypes                TEXT,\n    supertypes              TEXT,\n    tcgplayerProductId      TEXT,\n    text                    TEXT,\n    toughness               TEXT,\n    type                    TEXT,\n    types                   TEXT,\n    uuid                    TEXT              not null\n        unique,\n    variations              TEXT,\n    watermark               TEXT\n)\n\nCREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement,\n    flavorText   TEXT,\n    language     TEXT,\n    multiverseid INTEGER,\n    name         TEXT,\n    text         TEXT,\n    type         TEXT,\n    uuid         TEXT\n        references cards (uuid)\n)\n\nCREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement,\n    format TEXT,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement,\n    baseSetSize      INTEGER,\n    block            TEXT,\n    booster          TEXT,\n    code             TEXT              not null\n        unique,\n    isFoilOnly       INTEGER default 0 not null,\n    isForeignOnly    INTEGER default 0 not null,\n    isNonFoilOnly    INTEGER default 0 not null,\n    isOnlineOnly     INTEGER default 0 not null,\n    isPartialPreview INTEGER default 0 not null,\n    keyruneCode      TEXT,\n    mcmId            INTEGER,\n    mcmIdExtras      INTEGER,\n    mcmName          TEXT,\n    mtgoCode         TEXT,\n    name             TEXT,\n    parentCode       TEXT,\n    releaseDate      DATE,\n    tcgplayerGroupId INTEGER,\n    totalSetSize     INTEGER,\n    type             TEXT\n)\n\nCREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement,\n    language    TEXT,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade,\n    translation TEXT\n)\n\nCREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement,\n    date DATE,\n    text TEXT,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)",
      "enhanced_ddl": "CREATE TABLE \"cards\"\n(\n    id                      INTEGER           not null\n        primary key autoincrement,\n    artist                  TEXT -- The name of the artist that illustrated the card art.,\n    asciiName               TEXT -- The ASCII(opens new window) (Basic/128) code formatted card name with no special unicode characters.,\n    availability            TEXT -- A list of the card''s available printing types.,\n    borderColor             TEXT -- The color of the card border.,\n    cardKingdomFoilId       TEXT -- card Kingdom Foil Id,\n    cardKingdomId           TEXT -- card Kingdom Id,\n    colorIdentity           TEXT -- A list of all the colors found in manaCost, colorIndicator, and text,\n    colorIndicator          TEXT -- A list of all the colors in the color indicator (The symbol prefixed to a card''s types).,\n    colors                  TEXT -- A list of all the colors in manaCost and colorIndicator. ,\n    convertedManaCost       REAL -- The converted mana cost of the card. Use the manaValue property.,\n    duelDeck                TEXT -- The indicator for which duel deck the card is in.,\n    edhrecRank              INTEGER -- The card rank on EDHRec,\n    faceConvertedManaCost   REAL -- The converted mana cost or mana value for the face for either half or part of the card. ,\n    faceName                TEXT -- The name on the face of the card.,\n    flavorName              TEXT -- The promotional card name printed above the true card name on special cards that has no game function.,\n    flavorText              TEXT -- The italicized text found below the rules text that has no game function.,\n    frameEffects            TEXT -- The visual frame effects.,\n    frameVersion            TEXT -- The version of the card frame style.,\n    hand                    TEXT -- The starting maximum hand size total modifier. ,\n    hasAlternativeDeckLimit INTEGER default 0 not null -- If the card allows a value other than 4 copies in a deck.,\n    hasContentWarning       INTEGER default 0 not null -- If the card marked by Wizards of the Coast (opens new window) for having sensitive content. See this official article (opens new window) for more information.,\n    hasFoil                 INTEGER default 0 not null -- If the card can be found in foil,\n    hasNonFoil              INTEGER default 0 not null -- If the card can be found in non-foil,\n    isAlternative           INTEGER default 0 not null -- If the card is an alternate variation to an original printing,\n    isFullArt               INTEGER default 0 not null -- If the card has full artwork.,\n    isOnlineOnly            INTEGER default 0 not null -- If the card is only available in online game variations.,\n    isOversized             INTEGER default 0 not null -- If the card is oversized.,\n    isPromo                 INTEGER default 0 not null -- If the card is a promotional printing.,\n    isReprint               INTEGER default 0 not null -- If the card has been reprinted.,\n    isReserved              INTEGER default 0 not null -- If the card is on the Magic: The Gathering Reserved List (opens new window),\n    isStarter               INTEGER default 0 not null -- If the card is found in a starter deck such as Planeswalker/Brawl decks.,\n    isStorySpotlight        INTEGER default 0 not null -- If the card is a Story Spotlight card.,\n    isTextless              INTEGER default 0 not null -- If the card does not have a text box.,\n    isTimeshifted           INTEGER default 0 not null -- If the card is time shifted,\n    keywords                TEXT -- A list of keywords found on the card.,\n    layout                  TEXT -- The type of card layout. For a token card, this will be \"\"token\"\",\n    leadershipSkills        TEXT -- A list of formats the card is legal to be a commander in,\n    life                    TEXT -- The starting life total modifier. A plus or minus character precedes an integer.,\n    loyalty                 TEXT -- The starting loyalty value of the card.,\n    manaCost                TEXT -- The mana cost of the card wrapped in brackets for each value.,\n    mcmId                   TEXT,\n    mcmMetaId               TEXT,\n    mtgArenaId              TEXT,\n    mtgjsonV4Id             TEXT,\n    mtgoFoilId              TEXT,\n    mtgoId                  TEXT,\n    multiverseId            TEXT,\n    name                    TEXT -- The name of the card.,\n    number                  TEXT -- The number of the card,\n    originalReleaseDate     TEXT -- original Release Date,\n    originalText            TEXT -- original Text,\n    originalType            TEXT -- original Type,\n    otherFaceIds            TEXT -- other Face Ids,\n    power                   TEXT -- The power of the card.,\n    printings               TEXT -- A list of set printing codes the card was printed in, formatted in uppercase.,\n    promoTypes              TEXT -- A list of promotional types for a card.,\n    purchaseUrls            TEXT -- Links that navigate to websites where the card can be purchased.,\n    rarity                  TEXT -- The card printing rarity.,\n    scryfallId              TEXT,\n    scryfallIllustrationId  TEXT,\n    scryfallOracleId        TEXT,\n    setCode                 TEXT -- The set printing code that the card is from.,\n    side                    TEXT -- The identifier of the card side. ,\n    subtypes                TEXT -- A list of card subtypes found after em-dash.,\n    supertypes              TEXT -- A list of card supertypes found before em-dash.,\n    tcgplayerProductId      TEXT,\n    text                    TEXT -- The rules text of the card.,\n    toughness               TEXT -- The toughness of the card.,\n    type                    TEXT -- The type of the card as visible, including any supertypes and subtypes.,\n    types                   TEXT -- A list of all card types of the card, including Un‑sets and gameplay variants.,\n    uuid                    TEXT              not null\n        unique -- The universal unique identifier (v5) generated by MTGJSON. Each entry is unique.,\n    variations              TEXT,\n    watermark               TEXT -- The name of the watermark on the card.\n)\n\nCREATE TABLE \"foreign_data\"\n(\n    id           INTEGER not null\n        primary key autoincrement -- unique id number identifying this row of data,\n    flavorText   TEXT -- The foreign flavor text of the card.,\n    language     TEXT -- The foreign language of card.,\n    multiverseid INTEGER -- The foreign multiverse identifier of the card.,\n    name         TEXT -- The foreign name of the card.,\n    text         TEXT -- The foreign text ruling of the card.,\n    type         TEXT -- The foreign type of the card. Includes any supertypes and subtypes.,\n    uuid         TEXT\n        references cards (uuid)\n)\n\nCREATE TABLE \"legalities\"\n(\n    id     INTEGER not null\n        primary key autoincrement -- unique id identifying this legality,\n    format TEXT -- format of play,\n    status TEXT,\n    uuid   TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE \"sets\"\n(\n    id               INTEGER           not null\n        primary key autoincrement -- unique id identifying this set,\n    baseSetSize      INTEGER -- The number of cards in the set.,\n    block            TEXT -- The block name the set was in.,\n    booster          TEXT -- A breakdown of possibilities and weights of cards in a booster pack.,\n    code             TEXT              not null\n        unique -- The set code for the set.,\n    isFoilOnly       INTEGER default 0 not null -- If the set is only available in foil.,\n    isForeignOnly    INTEGER default 0 not null -- If the set is available only outside the United States of America.,\n    isNonFoilOnly    INTEGER default 0 not null -- If the set is only available in non-foil.,\n    isOnlineOnly     INTEGER default 0 not null -- If the set is only available in online game variations.,\n    isPartialPreview INTEGER default 0 not null -- If the set is still in preview (spoiled). Preview sets do not have complete data.,\n    keyruneCode      TEXT -- The matching Keyrune code for set image icons.,\n    mcmId            INTEGER -- The Magic Card Marketset identifier.,\n    mcmIdExtras      INTEGER -- The split Magic Card Market set identifier if a set is printed in two sets. This identifier represents the second set''s identifier.,\n    mcmName          TEXT,\n    mtgoCode         TEXT -- The set code for the set as it appears on Magic: The Gathering Online,\n    name             TEXT -- The name of the set.,\n    parentCode       TEXT -- The parent set code for set variations like promotions, guild kits, etc.,\n    releaseDate      DATE -- The release date in ISO 8601 format for the set.,\n    tcgplayerGroupId INTEGER -- The group identifier of the set on TCGplayer,\n    totalSetSize     INTEGER -- The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications - however those cards are included in the set itself.,\n    type             TEXT -- The expansion type of the set.\n)\n\nCREATE TABLE \"set_translations\"\n(\n    id          INTEGER not null\n        primary key autoincrement -- unique id identifying this set,\n    language    TEXT -- language of this card set,\n    setCode     TEXT\n        references sets (code)\n            on update cascade on delete cascade -- the set code for this set,\n    translation TEXT -- translation of this card set\n)\n\nCREATE TABLE \"rulings\"\n(\n    id   INTEGER not null\n        primary key autoincrement -- unique id identifying this ruling,\n    date DATE -- date ,\n    text TEXT -- description about this ruling,\n    uuid TEXT\n        references cards (uuid)\n            on update cascade on delete cascade\n)"
    },
    "toxicology": {
      "db_id": "toxicology",
      "tables": {
        "atom": {
          "name": "atom",
          "columns": [
            {
              "name": "atom_id",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "molecule_id",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "element",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "atom_id"
          ],
          "foreign_keys": [
            {
              "from": "molecule_id",
              "to_table": "molecule",
              "to_column": "molecule_id"
            }
          ],
          "ddl": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)",
          "enhanced_ddl": "CREATE TABLE `atom` (\n    `atom_id` TEXT NOT NULL -- the unique id of atoms,\n    `molecule_id` TEXT DEFAULT NULL -- identifying the molecule to which the atom belongs,\n    `element` TEXT DEFAULT NULL -- the element of the toxicology ,\n    PRIMARY KEY (`atom_id`),\n    FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
        },
        "bond": {
          "name": "bond",
          "columns": [
            {
              "name": "bond_id",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "molecule_id",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            },
            {
              "name": "bond_type",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "bond_id"
          ],
          "foreign_keys": [
            {
              "from": "molecule_id",
              "to_table": "molecule",
              "to_column": "molecule_id"
            }
          ],
          "ddl": "CREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)",
          "enhanced_ddl": "CREATE TABLE `bond` (\n    `bond_id` TEXT NOT NULL -- unique id representing bonds,\n    `molecule_id` TEXT DEFAULT NULL -- identifying the molecule in which the bond appears,\n    `bond_type` TEXT DEFAULT NULL -- type of the bond,\n    PRIMARY KEY (`bond_id`),\n    FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)"
        },
        "connected": {
          "name": "connected",
          "columns": [
            {
              "name": "atom_id",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "atom_id2",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "bond_id",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "atom_id",
            "atom_id2"
          ],
          "foreign_keys": [
            {
              "from": "bond_id",
              "to_table": "bond",
              "to_column": "bond_id"
            },
            {
              "from": "atom_id2",
              "to_table": "atom",
              "to_column": "atom_id"
            },
            {
              "from": "atom_id",
              "to_table": "atom",
              "to_column": "atom_id"
            }
          ],
          "ddl": "CREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)",
          "enhanced_ddl": "CREATE TABLE `connected` (\n    `atom_id` TEXT NOT NULL -- id of the first atom,\n    `atom_id2` TEXT NOT NULL -- id of the second atom,\n    `bond_id` TEXT DEFAULT NULL -- bond id representing bond between two atoms,\n    PRIMARY KEY (`atom_id`,`atom_id2`),\n    FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n    FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n    FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)"
        },
        "molecule": {
          "name": "molecule",
          "columns": [
            {
              "name": "molecule_id",
              "type": "TEXT",
              "notnull": true,
              "default": null
            },
            {
              "name": "label",
              "type": "TEXT",
              "notnull": false,
              "default": "NULL"
            }
          ],
          "primary_keys": [
            "molecule_id"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)",
          "enhanced_ddl": "CREATE TABLE `molecule` (\n    `molecule_id` TEXT NOT NULL -- unique id of molecule,\n    `label` TEXT DEFAULT NULL -- whether this molecule is carcinogenic or not,\n    PRIMARY KEY (`molecule_id`)\n)"
        }
      },
      "ddl": "CREATE TABLE `atom` (\n  `atom_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `element` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)\n\nCREATE TABLE `bond` (\n  `bond_id` TEXT NOT NULL,\n  `molecule_id` TEXT DEFAULT NULL,\n  `bond_type` TEXT DEFAULT NULL,\n  PRIMARY KEY (`bond_id`),\n  FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)\n\nCREATE TABLE `connected` (\n  `atom_id` TEXT NOT NULL,\n  `atom_id2` TEXT NOT NULL,\n  `bond_id` TEXT DEFAULT NULL,\n  PRIMARY KEY (`atom_id`,`atom_id2`),\n  FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n  FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)\n\nCREATE TABLE `molecule` (\n  `molecule_id` TEXT NOT NULL,\n  `label` TEXT DEFAULT NULL,\n  PRIMARY KEY (`molecule_id`)\n)",
      "enhanced_ddl": "CREATE TABLE `atom` (\n    `atom_id` TEXT NOT NULL -- the unique id of atoms,\n    `molecule_id` TEXT DEFAULT NULL -- identifying the molecule to which the atom belongs,\n    `element` TEXT DEFAULT NULL -- the element of the toxicology ,\n    PRIMARY KEY (`atom_id`),\n    FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)\n\nCREATE TABLE `bond` (\n    `bond_id` TEXT NOT NULL -- unique id representing bonds,\n    `molecule_id` TEXT DEFAULT NULL -- identifying the molecule in which the bond appears,\n    `bond_type` TEXT DEFAULT NULL -- type of the bond,\n    PRIMARY KEY (`bond_id`),\n    FOREIGN KEY (`molecule_id`) REFERENCES `molecule` (`molecule_id`)\n)\n\nCREATE TABLE `connected` (\n    `atom_id` TEXT NOT NULL -- id of the first atom,\n    `atom_id2` TEXT NOT NULL -- id of the second atom,\n    `bond_id` TEXT DEFAULT NULL -- bond id representing bond between two atoms,\n    PRIMARY KEY (`atom_id`,`atom_id2`),\n    FOREIGN KEY (`atom_id`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n    FOREIGN KEY (`atom_id2`) REFERENCES `atom` (`atom_id`) ON DELETE CASCADE ON UPDATE CASCADE,\n    FOREIGN KEY (`bond_id`) REFERENCES `bond` (`bond_id`) ON DELETE CASCADE ON UPDATE CASCADE\n)\n\nCREATE TABLE `molecule` (\n    `molecule_id` TEXT NOT NULL -- unique id of molecule,\n    `label` TEXT DEFAULT NULL -- whether this molecule is carcinogenic or not,\n    PRIMARY KEY (`molecule_id`)\n)"
    },
    "thrombosis_prediction": {
      "db_id": "thrombosis_prediction",
      "tables": {
        "Examination": {
          "name": "Examination",
          "columns": [
            {
              "name": "ID",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Examination Date",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "aCL IgG",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "aCL IgM",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "ANA",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ANA Pattern",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "aCL IgA",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "Diagnosis",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "KCT",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "RVVT",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "LAC",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Symptoms",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Thrombosis",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [],
          "foreign_keys": [
            {
              "from": "ID",
              "to_table": "Patient",
              "to_column": "ID"
            }
          ],
          "ddl": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null -- identification of the patient,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null -- anti-nucleus antibody concentration,\n    `ANA Pattern`      TEXT null -- anti-nucleus antibody concentration,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null -- disease names,\n    KCT                TEXT null -- measure of degree of coagulation,\n    RVVT              TEXT null -- measure of degree of coagulation,\n    LAC                TEXT null -- measure of degree of coagulation,\n    Symptoms           TEXT null -- other symptoms observed,\n    Thrombosis         INTEGER          null -- degree of thrombosis,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
        },
        "Patient": {
          "name": "Patient",
          "columns": [
            {
              "name": "ID",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "SEX",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Birthday",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "Description",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "First Date",
              "type": "DATE",
              "notnull": false,
              "default": null
            },
            {
              "name": "Admission",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "Diagnosis",
              "type": "TEXT",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "ID"
          ],
          "foreign_keys": [],
          "ddl": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)",
          "enhanced_ddl": "CREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key -- identification of the patient,\n    SEX          TEXT  null -- Sex,\n    Birthday     DATE          null -- Birthday,\n    Description  DATE          null -- the first date when a patient data was recorded,\n    `First Date` DATE          null,\n    Admission    TEXT  null -- patient was admitted to the hospital (+) or followed at the outpatient clinic (-),\n    Diagnosis    TEXT  null -- disease names\n)"
        },
        "Laboratory": {
          "name": "Laboratory",
          "columns": [
            {
              "name": "ID",
              "type": "INTEGER",
              "notnull": true,
              "default": "0"
            },
            {
              "name": "Date",
              "type": "DATE",
              "notnull": true,
              "default": "'0000-00-00'"
            },
            {
              "name": "GOT",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "GPT",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "LDH",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "ALP",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "TP",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "ALB",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "UA",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "UN",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CRE",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "T-BIL",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "T-CHO",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "TG",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CPK",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "GLU",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "WBC",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "RBC",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "HGB",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "HCT",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "PLT",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "PT",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "APTT",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "FG",
              "type": "REAL",
              "notnull": false,
              "default": null
            },
            {
              "name": "PIC",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "TAT",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "TAT2",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "U-PRO",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "IGG",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "IGA",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "IGM",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "CRP",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "RA",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "RF",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "C3",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "C4",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            },
            {
              "name": "RNP",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "SM",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "SC170",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "SSA",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "SSB",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "CENTROMEA",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "DNA",
              "type": "TEXT",
              "notnull": false,
              "default": null
            },
            {
              "name": "DNA-II",
              "type": "INTEGER",
              "notnull": false,
              "default": null
            }
          ],
          "primary_keys": [
            "ID",
            "Date"
          ],
          "foreign_keys": [
            {
              "from": "ID",
              "to_table": "Patient",
              "to_column": "ID"
            }
          ],
          "ddl": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)",
          "enhanced_ddl": "CREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null -- identification of the patient,\n    Date      DATE default '0000-00-00' not null -- Date of the laboratory tests (YYMMDD),\n    GOT       INTEGER                       null -- AST glutamic oxaloacetic transaminase,\n    GPT       INTEGER                        null -- ALT glutamic pyruvic transaminase,\n    LDH       INTEGER                        null -- lactate dehydrogenase,\n    ALP       INTEGER                        null -- alkaliphophatase,\n    TP        REAL             null -- total protein,\n    ALB       REAL             null -- albumin,\n    UA        REAL             null -- uric acid,\n    UN        INTEGER                       null -- urea nitrogen,\n    CRE       REAL             null -- creatinine,\n    `T-BIL`   REAL             null -- total bilirubin,\n    `T-CHO`   INTEGER                       null -- total cholesterol,\n    TG        INTEGER                       null -- triglyceride,\n    CPK       INTEGER                       null -- creatinine phosphokinase,\n    GLU       INTEGER                       null -- blood glucose,\n    WBC       REAL             null -- White blood cell,\n    RBC       REAL             null -- Red blood cell,\n    HGB       REAL             null -- Hemoglobin,\n    HCT       REAL             null -- Hematoclit,\n    PLT       INTEGER                       null -- platelet,\n    PT        REAL             null -- prothrombin time,\n    APTT      INTEGER                       null -- activated partial prothrombin time,\n    FG        REAL             null -- fibrinogen,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null -- proteinuria,\n    IGG       INTEGER                       null -- Ig G,\n    IGA       INTEGER                       null -- Ig A,\n    IGM       INTEGER                       null -- Ig M,\n    CRP       TEXT              null -- C-reactive protein,\n    RA        TEXT              null -- Rhuematoid Factor,\n    RF        TEXT              null -- RAHA,\n    C3        INTEGER                       null -- complement 3,\n    C4        INTEGER                       null -- complement 4,\n    RNP       TEXT              null -- anti-ribonuclear protein,\n    SM        TEXT              null -- anti-SM,\n    SC170     TEXT              null -- anti-scl70,\n    SSA       TEXT              null -- anti-SSA,\n    SSB       TEXT              null -- anti-SSB,\n    CENTROMEA TEXT              null -- anti-centromere,\n    DNA       TEXT              null -- anti-DNA,\n    `DNA-II`  INTEGER                       null -- anti-DNA,\n    primary key (ID, Date),\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
        }
      },
      "ddl": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null,\n    `ANA Pattern`      TEXT null,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null,\n    KCT                TEXT null,\n    RVVT              TEXT null,\n    LAC                TEXT null,\n    Symptoms           TEXT null,\n    Thrombosis         INTEGER          null,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key,\n    SEX          TEXT  null,\n    Birthday     DATE          null,\n    Description  DATE          null,\n    `First Date` DATE          null,\n    Admission    TEXT  null,\n    Diagnosis    TEXT  null\n)\n\nCREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null,\n    Date      DATE default '0000-00-00' not null,\n    GOT       INTEGER                       null,\n    GPT       INTEGER                        null,\n    LDH       INTEGER                        null,\n    ALP       INTEGER                        null,\n    TP        REAL             null,\n    ALB       REAL             null,\n    UA        REAL             null,\n    UN        INTEGER                       null,\n    CRE       REAL             null,\n    `T-BIL`   REAL             null,\n    `T-CHO`   INTEGER                       null,\n    TG        INTEGER                       null,\n    CPK       INTEGER                       null,\n    GLU       INTEGER                       null,\n    WBC       REAL             null,\n    RBC       REAL             null,\n    HGB       REAL             null,\n    HCT       REAL             null,\n    PLT       INTEGER                       null,\n    PT        REAL             null,\n    APTT      INTEGER                       null,\n    FG        REAL             null,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null,\n    IGG       INTEGER                       null,\n    IGA       INTEGER                       null,\n    IGM       INTEGER                       null,\n    CRP       TEXT              null,\n    RA        TEXT              null,\n    RF        TEXT              null,\n    C3        INTEGER                       null,\n    C4        INTEGER                       null,\n    RNP       TEXT              null,\n    SM        TEXT              null,\n    SC170     TEXT              null,\n    SSA       TEXT              null,\n    SSB       TEXT              null,\n    CENTROMEA TEXT              null,\n    DNA       TEXT              null,\n    `DNA-II`  INTEGER                       null,\n    primary key (ID, Date),\n        foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)",
      "enhanced_ddl": "CREATE TABLE Examination\n(\n    ID                 INTEGER          null -- identification of the patient,\n    `Examination Date` DATE         null,\n    `aCL IgG`          REAL        null,\n    `aCL IgM`          REAL        null,\n    ANA                INTEGER          null -- anti-nucleus antibody concentration,\n    `ANA Pattern`      TEXT null -- anti-nucleus antibody concentration,\n    `aCL IgA`          INTEGER          null,\n    Diagnosis          TEXT null -- disease names,\n    KCT                TEXT null -- measure of degree of coagulation,\n    RVVT              TEXT null -- measure of degree of coagulation,\n    LAC                TEXT null -- measure of degree of coagulation,\n    Symptoms           TEXT null -- other symptoms observed,\n    Thrombosis         INTEGER          null -- degree of thrombosis,\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)\n\nCREATE TABLE Patient\n(\n    ID           INTEGER default 0 not null\n        primary key -- identification of the patient,\n    SEX          TEXT  null -- Sex,\n    Birthday     DATE          null -- Birthday,\n    Description  DATE          null -- the first date when a patient data was recorded,\n    `First Date` DATE          null,\n    Admission    TEXT  null -- patient was admitted to the hospital (+) or followed at the outpatient clinic (-),\n    Diagnosis    TEXT  null -- disease names\n)\n\nCREATE TABLE Laboratory\n(\n    ID        INTEGER  default 0            not null -- identification of the patient,\n    Date      DATE default '0000-00-00' not null -- Date of the laboratory tests (YYMMDD),\n    GOT       INTEGER                       null -- AST glutamic oxaloacetic transaminase,\n    GPT       INTEGER                        null -- ALT glutamic pyruvic transaminase,\n    LDH       INTEGER                        null -- lactate dehydrogenase,\n    ALP       INTEGER                        null -- alkaliphophatase,\n    TP        REAL             null -- total protein,\n    ALB       REAL             null -- albumin,\n    UA        REAL             null -- uric acid,\n    UN        INTEGER                       null -- urea nitrogen,\n    CRE       REAL             null -- creatinine,\n    `T-BIL`   REAL             null -- total bilirubin,\n    `T-CHO`   INTEGER                       null -- total cholesterol,\n    TG        INTEGER                       null -- triglyceride,\n    CPK       INTEGER                       null -- creatinine phosphokinase,\n    GLU       INTEGER                       null -- blood glucose,\n    WBC       REAL             null -- White blood cell,\n    RBC       REAL             null -- Red blood cell,\n    HGB       REAL             null -- Hemoglobin,\n    HCT       REAL             null -- Hematoclit,\n    PLT       INTEGER                       null -- platelet,\n    PT        REAL             null -- prothrombin time,\n    APTT      INTEGER                       null -- activated partial prothrombin time,\n    FG        REAL             null -- fibrinogen,\n    PIC       INTEGER                       null,\n    TAT       INTEGER                       null,\n    TAT2      INTEGER                       null,\n    `U-PRO`   TEXT              null -- proteinuria,\n    IGG       INTEGER                       null -- Ig G,\n    IGA       INTEGER                       null -- Ig A,\n    IGM       INTEGER                       null -- Ig M,\n    CRP       TEXT              null -- C-reactive protein,\n    RA        TEXT              null -- Rhuematoid Factor,\n    RF        TEXT              null -- RAHA,\n    C3        INTEGER                       null -- complement 3,\n    C4        INTEGER                       null -- complement 4,\n    RNP       TEXT              null -- anti-ribonuclear protein,\n    SM        TEXT              null -- anti-SM,\n    SC170     TEXT              null -- anti-scl70,\n    SSA       TEXT              null -- anti-SSA,\n    SSB       TEXT              null -- anti-SSB,\n    CENTROMEA TEXT              null -- anti-centromere,\n    DNA       TEXT              null -- anti-DNA,\n    `DNA-II`  INTEGER                       null -- anti-DNA,\n    primary key (ID, Date),\n    foreign key (ID) references Patient (ID)\n            on update cascade on delete cascade\n)"
    }
  }